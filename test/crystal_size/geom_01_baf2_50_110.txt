// mode: -*- c++ -*-
//
// geometry file for Mu2e.
//
// $Id: geom_01_baf2_50_110.txt,v 1.1 2013/11/04 23:37:46 murat Exp $
// $Author: murat $
// $Date: 2013/11/04 23:37:46 $
//
// Original author Rob Kutschke
//
// Warning:  do not write 10000. as 10,000.; it will be read as two numbers (10., 0.).

#include "Mu2eG4/test/geom_01.txt"
//-----------------------------------------------------------------------------
// subsystems to use
//-----------------------------------------------------------------------------
bool hasHall                     = true;
bool hasTarget                   = true;
bool hasProtonAbsorber           = false;
bool hasInternalNeutronAbsorber  = false;
bool hasExternalNeutronShielding = false;
bool hasVaneCalorimeter          = false;
bool hasDiskCalorimeter          = true;
bool hasHybridCalorimeter        = false;
bool hasBFieldManager            = true;
bool hasBeamline                 = false;
bool hasVirtualDetector          = true;  // some components, e.g. ProtonAbsorber assume vd presence now;
bool hasCosmicRayShield          = false;
bool hasMBS                      = false; // note the two subcomponents, see mbs section below; 
                                          // no MBS implies no downstream hole in Cosmic Ray Passive Shield
                                          // Magnetic field may be affected as well
//-----------------------------------------------------------------------------
// Write mu2e geometry into a GDML file
//-----------------------------------------------------------------------------
bool   writeGDML        = false;
string GDMLFileName     = "geom_01_baf2_50_110.gdml";
//-----------------------------------------------------------------------------
// set magnetic field to zero
//-----------------------------------------------------------------------------
int    detSolFieldForm = 2;    // uniform magnetic field, Bz only
double toyDS.bz        = 0.0;
//-----------------------------------------------------------------------------
// materials: add BaF2
//-----------------------------------------------------------------------------
vector<string> mu2e.materials =
  { "HeavyConcrete", "ShieldingConcrete", "IsoButane", "StrawGas",
    "Kapton", "Scintillator", "WAGVacuum", "DSVacuum", "MBOverburden",
    "ITGasHe_90Isob_10", "ITGasHe_90CF4_10", "ITGasMix", "ITGasHe_75Isob_25_400mbar",
    "CarbonFiber_resin", "CarbonFiber", "PolypropyleneFoam", "CFoam", "CFoam_332", 
    "CFoam_166", "CFoam_080", "KptFoam_030", "Polyethylene", 
    "Polyethylene092B050d095", "Polyethylene092B300d119",
    "Polyethylene092Li075d106", "Polyethylene092", "Polyethylene096", "StainlessSteel", "Lyso_01", 
    "BaF2",
    "A95083", "NbTi", "NbTiCu", "AL999Ni001", "C_19_H_20_O_4", "C_10_H_18_O_4",
    "C_9_H_22_N_2", "Epotek301", "G10", "SCCableInsulation", "SCCable",
    "ZirconiumHydridePolyethylene", "EGlass", "G10_FR4",
    "Polyethylene0020", "StoppingTarget_Al", "CONCRETE_MARS", "BARITE", "Half_Poly"
};

string g4.physicsListName = "QGSP_BERT";
//-----------------------------------------------------------------------------
// redefined calorimeter parameters - crystal description
//-----------------------------------------------------------------------------
double calorimeter.caloMotherInRadius           = 0;   
double calorimeter.caloMotherOutRadius          = 700;   
double calorimeter.caloMotherZ0                 = 11799;   
double calorimeter.caloMotherZ1                 = 12501;   

double calorimeter.calorimeterZFront            = 11800.0;     // front posiiton of calo section in mu2e coordinates 
                                                               // MUST be at least 1 mm larger than caloMotherZ0 for plac
int    calorimeter.numberOfDisks               =  1;
vector<double> calorimeter.diskInnerRadius     = {0. }; // mm
vector<double> calorimeter.diskOuterRadius     = {700.}; // mm - this gives many rings
vector<double> calorimeter.diskRotationAngle   = {0.};  // rad
vector<double> calorimeter.diskSeparation      = {0.};  // mm  separation w.r.t mother volume

// crystal characteristics

double calorimeter.crystalHalfLong             = 55.0;
double calorimeter.crystalHalfTrans            = 25.0;
double calorimeter.crystalHexsize              = 25.0;    //mm  half distance across flats of hex crystal
string calorimeter.crystalMaterial             = "BaF2";  //

string calorimeter.crystalWrapper              = "Polyethylene092";
double calorimeter.crystalWrapperThickness     = 0.01 ;
double calorimeter.crystalShellThickness       = 0.0 ;

string calorimeter.crystalReadoutMaterial      = "G4_Si";
double calorimeter.crystalReadoutHalfTrans     = 5;
double calorimeter.crystalReadoutHalfThickness = 1;
int    calorimeter.crystalReadoutChannelCount  = 2; // APDs per crystal

double calorimeter.crystalNonUniformity        = 0.0; // -2 to 2  (A(ro)-A(front))/A(middle)
double calorimeter.timeGap                     = 30.0;  // ns
double calorimeter.electronDepositionAPD       = 1000.0; // MeV
double calorimeter.electronMinEnergyAPD        = 0.1;    // MeV

// calibration system

int    calorimeter.nPipes                      = 1;   // claibration pipe radius
 vector<double> calorimeter.pipeTorRadius      = {0}; // mm
double calorimeter.pipeRadius                  = 0;   // claibration pipe radius
double calorimeter.pipeThickness               = 0.;  // claibration pipe thickness

