# -*- mode:tcl -*-
#------------------------------------------------------------------------------
# 105 MeV/c electron gun + CD-3 mix + full reco + display
#
# make STNTUPLE in one go, without creating an intermediate file
# if not running on the grid, need to specify the background hit file 
# or use murat/scripts/submit_mu2e_job
#
# see examples in the PROLOG section
# - old background files (x050) had 0.5 expected background, to generate nominal 
#   background, need to set meanBackground to 2
# - for the CD3c background files don't need to do that
# - URL for CD-3C datasets: http://mu2e.fnal.gov/atwork/workgroups/BackgroundWG/cd3-samples/
# - dataset: datasets/cd3-detmix-cut-local-v2 (local)
# -          datasets/cd3-detmix-cut-v2 for the grid
# example:
# --------
# murat/scripts/submit_mu2e_job -v -c murat/test/conv_mixcd3_x1_stnmaker.fcl -S $PWD/datasets/ccd35600-local \
#                               -f 1:@bgHitFiles:datasets/cd3-detmix-cut-local-v2 -n 10 
#------------------------------------------------------------------------------
#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"

#include "Stntuple/fcl/prolog.fcl"
#include "murat/fcl/prolog.fcl"

BEGIN_PROLOG
  pdgId                               : 11
  bgHitFiles                          : @nil
  G4_MODULE_LABEL                     : "g4run"          # for normal generators and Ralf's cosmics
#  G4_MODULE_LABEL                     : "detectorFilter" # for Andrei's datasets 
#------------------------------------------------------------------------------
# note 1: background files below correspond to the TDR geometry 
# note 2: MixP3 files are about 9.3 GBytes large
# mixp3-x050 files are ~ 2.3 GBytes (250 events per file)
#------------------------------------------------------------------------------
END_PROLOG

#include "murat/fcl/templates.fcl"

process_name : EgunMixHitsCaloAprVpidDisplay

producers    : { @table::murat.producers }
outputs      : { @table::murat.outputs   }
filters      : { @table::murat.filters   }
paths        : { @table::murat.paths     }

source       : { module_type : RootInput 
     inputCommands : ['keep *_*_*_*'
    		     , 'drop HelixVal_*_*_*'
    		     , 'drop *_PosHelixFinder_*_*'
     		     , 'drop *_NegHelixFinder_*_*'
 		     , 'drop *_TRFDownstreameMinus_*_*'
 		     , 'drop *_TRFDownstreamePlus_*_*'
 		     , 'drop *_TRFDownstreammuMinus_*_*'
 		     , 'drop *_TRFDownstreammuPlus_*_*'
 		     , 'drop *_TimePeakFinder_*_*'
 		     , 'drop *_MakeCaloProtoCluster_*_*'
 		     , 'drop *_MakeCaloCluster_*_*'
     #		     , 'drop *_protonTimeMap_*_*'
     #		     , 'drop mu2eStrawDigis_*_*_*'
     #		     , 'drop mu2eStrawHits_*_*_*'
     #		     , 'drop *_CaloReadoutHitsMaker_*_*'
     #		     , 'drop *_CaloCrystalHitsMaker_*_*'
     # Uncomment the above lines to reduce file size.
 		     ]
}

physics: {
    producers : { @table::producers }

    filters : { @table::filters 
	InitStntuple  : { @table::filters.InitStntuple histFileName : "read_hits_calo_apr_vpid_stnm.stn"  }
 	StntupleMaker : { @table::filters.StntupleMaker3 
	    g4ModuleLabel : @local::G4_MODULE_LABEL
	}
    }

#    p1 : [ @sequence::path_hits_calo_apr_vpid_display ]


    @table::paths

    p1 : [ @sequence::calRecoSeq                , 
	   @sequence::allPatRecSeq              ,
           @sequence::TrackCaloMatching.matching,
	   ParticleID                           , 
	   MuHitDisplay
	  ]

    trigger_paths : [ p1  ]
    end_paths     : [ out ]
}

services.TFileService.fileName            : "read_hits_calo_apr_vpid_stnm.hist"
#------------------------------------------------------------------------------
# uncomment to write the DST out
#------------------------------------------------------------------------------
physics.out            : [ detectorOutput ]
outputs.detectorOutput : { @table::outputs.detectorOutput 
    fileName           : "read_hits_calo_apr_vpid_stnm.art"
    fastCloning        : false
}
#------------------------------------------------------------------------------
# everything below is appended by murat/scripts/submit_mu2e_job
#------------------------------------------------------------------------------
