//

// #include "CalPatRec/inc/DeltaFinder_types.hh"

//#include "TEve.h"
#include "TEveViewer.h"
#include "TEveManager.h"
#include "TEveGeoShape.h"
#include "TEveTrans.h"
#include "TEveScene.h"
#include "TRandom3.h"
#include "TGeoTube.h"
#include "stdio.h"

#include "murat/gui/read_tracker_geometry.hh"

// #include "fstdio.h"

int const kNStations = 20;
int const kNPanels   =  6;
int const kNWires    = 96;

//-----------------------------------------------------------------------------
class TEvdWire {
public:
  int            fNumber;
  TEveGeoShape*  fShape;

  TEvdWire(int I) { fNumber = I; fShape = NULL; }
  
  void Init(double rho, double z, double nx, double ny, double HalfLength) {
    fShape  = new TEveGeoShape("a");
    fShape->SetShape(new TGeoTube(2.45, 2.5, HalfLength)); // in mm
    // now need to position the wire properly
    fShape->RefMainTrans().SetPos(rho,z,0);
    double phi = atan2(ny,nx);
    fShape->RefMainTrans().RotatePF(1,3,phi);
    // rotation is to be added
  }
};

//-----------------------------------------------------------------------------
class TEvdPanel {
public:
  int        fNumber;
  TEvdWire*  fWire[kNWires];

  TEvdPanel(int I = -1) {
    fNumber = I;
    for (int i=0; i<kNWires; i++) fWire[i] = new TEvdWire(i);
  }
};

// class TEvdFace {
//   TEvdPanel*  fPanel[3];
// };

//-----------------------------------------------------------------------------
class TEvdPlane {
public:
  int         fNumber;
  TEvdPanel*  fPanel[6];

  TEvdPlane(int I = -1) {
    fNumber = I;
    for (int i=0; i<kNPanels; i++) fPanel[i] = new TEvdPanel(0);
  }
};

//-----------------------------------------------------------------------------
class TEvdStation {
public:
  int         fNumber;
  TEvdPlane*  fPlane[2];

  TEvdStation(int I = -1) {
    fNumber = I;
    for (int i=0; i<2; i++) fPlane[i] = new TEvdPlane(i);
  }
};

//-----------------------------------------------------------------------------  
class TEvdTracker {
public:
  TEvdStation*    fStation[kNStations];

  TEvdTracker() {
    for (int i=0; i<kNStations; i++) fStation[i] = new TEvdStation(i);
  }
};


TEvdTracker* _tracker;

//-----------------------------------------------------------------------------
int read_tracker_geometry() {

  const char* fn = "trackerNumerology.txt";
  // const char* fn = "a.txt";

    FILE* f = fopen(fn,"r");

  if (f == NULL) {
    printf("ERROR: can\'t open %s, BAIL OUT\n",fn);
  }

  _tracker = new TEvdTracker();
  
  // read input file
  char   c[1000];

  int    station, plane, face, panel, layer, straw, straw_index;
  float  r, x, y, z, rho, half_length, phi, nx, ny;
  
  while ((c[0]=getc(f)) != EOF) {
					// check if it is a comment line
    if (c[0] != '#') {
      ungetc(c[0],f);
      // read channel number
      fscanf(f,"%i" ,&station   );
      fscanf(f,"%i" ,&plane    );
      fscanf(f,"%i" ,&face );
      fscanf(f,"%i" ,&panel );
      fscanf(f,"%i" ,&layer );
      fscanf(f,"%i" ,&straw );
      fscanf(f,"%i" ,&straw_index );
      fscanf(f,"%f" ,&r );
      fscanf(f,"%f" ,&x );
      fscanf(f,"%f" ,&y );
      fscanf(f,"%f" ,&z );
      fscanf(f,"%f" ,&rho );
      fscanf(f,"%f" ,&half_length );
      fscanf(f,"%f" ,&phi );
      fscanf(f,"%f" ,&nx );
      fscanf(f,"%f" ,&ny );

      printf("  %3i %6i %5i %4i %5i %5i %10i %8.3f %10.3f %10.3f %10.3f %10.3f %10.3f %8.2f %8.4f %8.4f\n",
	     station,plane,face, panel,
	     layer,straw, straw_index,r,x,y,z,rho, half_length,phi,nx,ny);
      //-----------------------------------------------------------------------------
      // initialize the corresponding object
      //-----------------------------------------------------------------------------
      TEvdStation* s       = _tracker->fStation[station];
      int ip               = plane % 2;
      TEvdPlane* pln       = s->fPlane[ip];
      TEvdPanel* evd_panel = pln->fPanel[panel];

      evd_panel->fWire[straw]->Init(rho,z,nx,ny,half_length);
    }
    fgets(c,1000,f);
  }
  //-----------------------------------------------------------------------------
  // at this point the geometry is initialized, need to create a view
  //-----------------------------------------------------------------------------

  fclose(f);
  
  //-----------------------------------------------------------------------------
  // draw one station
  //-----------------------------------------------------------------------------
  TEveManager::Create();

  TColor::SetPalette(1, 0);
  gRandom = new TRandom3(0);

  TEveScene *s = gEve->SpawnNewScene("MyScene", "OoogaDooga");
  s->SetHierarchical(kTRUE);

  // insufficient memory to display all 
  for (int is=0; is<1; is++) {

    for (int iplane=0; iplane<2; iplane++) {
    
      for (int ip=0; ip<6; ip++) {

	TEvdPanel* ep = _tracker->fStation[is]->fPlane[iplane]->fPanel[ip];
	for (int iw=0; iw<95; iw++) {
	  TEveElement* el = ep->fWire[iw]->fShape;
	  el->SetMainTransparency(95);
	  el->SetMainColor(133);
	  s->AddElement(el);
	}
      }
    }
  }

  gEve->GetDefaultViewer()->AddScene(s);
  gEve->Redraw3D(kTRUE);
  
  return 0;
}
