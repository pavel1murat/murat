# -*- mode:tcl -*-
#
# fcl config file to perform Geant4 studies using the Mu2e framework infrastructure and simple geometry
#
# Original author K.L. Genser
#

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"

BEGIN_PROLOG
stepperout: {
   type: constant
   value: false
   write: "stepper"
}
END_PROLOG

# Give this job a name.
process_name : g4study

# Start form an empty source
source : {
  module_type : EmptyEvent
  maxEvents : 100
}

services : {

  message               : @local::default_message
  TFileService          : { fileName : "g4study.hist" }
  RandomNumberGenerator : { }

  GeometryService: {
      inputFile           : "murat/gaas/geom/g4Air_geom.txt"
#      inputFile      : "Mu2eG4/test/g4Air_geom.txt"
      standardMu2eDetector: false
  }
  
  ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"      }
  GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
  G4Helper               : { }
  
  SeedService            : { @table::automaticSeeds
      # Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
      baseSeed         :  0
      maxUniqueEngines :  20
  }
}

physics : {

  producers:  {

#    generate : @local::generate
    generate:  {
      module_type          : EventGenerator
      inputfile            : "murat/gaas/fcl/alphaParticleGun.txt"
      allowReplacement     : true
      messageOnReplacement : true
    }

    g4run :  { @table::g4run
	# The line below causes a StepPointMC being stored for each step; comment it out to disable it
	Mu2eG4SteppingOnlyCut : @local::stepperout
	Mu2eG4StackingOnlyCut : @local::mu2eg4NoCut
	# Mu2eG4CommonCut: { type: kineticEnergy cut: 1000000. }
	
	physics : { @table::g4run.physics
	    physicsListName : "ShieldingM"
	    # bfieldMaxStep   : 500000.        # not implemented (no field)
	}
	
	debug : { @table::g4run.debug
	    writeGDML                : false
	    GDMLFileName             : "airLayer.gdml"
	    worldVerbosityLevel      : 0
	    diagLevel                : 1
	    printElements            : true
	    worldVerbosityLevel      : 2
	    fillDiagnosticHistograms : true
	    printPhysicsProcessSummary : true
	    # checkFieldMap : 0 // not implemented (no field)
	}

	SDConfig: {
	    enableSD: [] // not implemented
	    TimeVD: { times: [0.01] }
	}

	TrajectoryControl: { @table::g4run.TrajectoryControl
	    mcTrajectoryMinSteps      : 0
	    mcTrajectoryMomentumCut   : 0.  # MeV/c
	    saveTrajectoryMomentumCut : 0.  # MeV/c
	    perVolumeMinDistance      : {}
	}
    }
    randomsaver          : @local::randomsaver
  }

  filters : {
      GaasLayerAna : {
	  module_type        : GaasLayerAna
	  g4ModuleLabel      : "g4run"
	  debugBits          : {}
      }
  } 

  p1 : [generate , g4run , GaasLayerAna]
#  p1 : [generate , g4run ]
  e1 : []

  trigger_paths  : [p1]
  end_paths      : [e1]
}

outputs:  {
  outfile : {
    module_type   :   RootOutput
    fileName      :   "g4Air.art"
  }
}
