# -*- mode: tcl -*-
# Example 1.
#
# $Id: tcalm003_Mau8.fcl,v 1.2 2013/06/12 06:17:16 murat Exp $
# $Author: murat $
# $Id: tcalm003_Mau8.fcl,v 1.2 2013/06/12 06:17:16 murat Exp $

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"

# optimize the disk Z positions and sizes

process_name : tcalm003
#------------------------------------------------------------------------------
# input and output files
#------------------------------------------------------------------------------
source : {
  module_type : RootInput
  fileNames   : [ "/grid/fermiapp/mu2e/DataFiles/ExampleDataFiles/Workbook/conversionOnly_01_data.root" ]
  maxEvents   : 10000000
}

outputs: {
  outfile : {
    module_type    : RootOutput
    fileName       : "{DATASET}.{JOB}.strip.root"
    SelectEvents   : { SelectEvents: [ p1 ] }
    outputCommands : ['keep *_*_*_*'

#                   , 'drop mu2ePointTrajectoryMapVector_*_*_*'
#                   , 'drop mu2eSimParticles_*_*_*'
# Uncomment the above line to reduce file size.
                     ]  
  }
}
#------------------------------------------------------------------------------
# services: use vane-based geometry as TCalm003 is not using cal geometry at all
#------------------------------------------------------------------------------
services : {
  message      : @local::default_message
  TFileService : { fileName : "{DATASET}.trkpatrec.hist"}

  user : {
    GeometryService        : { inputFile      : "murat/geom/geom_01_vane_Mau8.txt"   }
    ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"      }
    GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
  }

}

physics : {

  producers : {


      MakeStereoHits : @local::MakeStereoHits
      FlagStrawHits  : @local::FlagStrawHits
      FlagBkgHits    : @local::FlagBkgHits
      TrkPatRec1     : @local::TrkPatRecDownstreameMinus
#    trkPatRec2 : @local::TrkPatRecUpstreamePlus

     makeCaloCluster: {
	 module_type                   : MakeCaloCluster
	 diagLevel                     : 0
	 generatorModuleLabel          : generate
	 caloCrystalModuleLabel        : CaloCrystalHitsMaker
	 g4ModuleLabel                 : g4run
	 #caloReadoutModuleLabel: CaloReadoutHitsMaker
	 caloClusterAlgorithm          : closest
	 caloClusterSeeding            : energy
	 #     caloClusterSeeding    : time
	 deltaTime                     : 10.0 #ns
	 nCryPerCrystal                : 1
	 EnoiseCut                     : 0.00 #MeV
	 EclusterCut                   : 0.00 #MeV  
	 maxFullPrint                  : 201
     }

      trkExtrapol : {
	  module_type                  : TrkExtrapol
	  diagLevel                    : 1
	  fitterModuleLabel            : TrkPatRec1
	  maxNumberStoresPoints        : 1
	  # MC truth finder, analyzer configuration
	  KalFitMC : {
	  }        
      }

      caloMatching : {
	  module_type                  : CaloMatching
#	  diagLevel                    : 1
	  fitterModuleLabel            : TrkPatRec1
	  trkToCaloExtrapolModuleLabel : trkExtrapol
	  caloClusterModuleLabel       : makeCaloCluster
	  outPutNtup                   : 0
	  caloClusterAlgorithm         : closest
	  caloClusterSeeding           : energy
      }

      tcalm003 : { 
	  module_type                  : TCalm003
	  strawHitMaker                : makeSH
	  trkExtrapol                  : ""
	  trkCalMatch                  : ""
	  histFileName                 : "{DATASET}.tcalm003_Mau8.hist"
	  minTActive                   : 0.
	  debugBits                    : { 
	                                   # bit0:1  
	                                   # bit1:1 
	                                   # bit51:1
	  }
      }
  }
#------------------------------------------------------------------------------
# analysis modules
#
# tcalm003 bit 51: write out events with matched tracks
#------------------------------------------------------------------------------
  analyzers : {
  }
  
  p1 : [ MakeStereoHits, FlagStrawHits, FlagBkgHits, TrkPatRec1, 
	 makeCaloCluster, 
	 # trkExtrapol, caloMatching, 
	 tcalm003 ]
#  e1 : [ outfile ]
  e1 : [  ]

  trigger_paths  : [p1]
  #  trigger_paths  : []
  end_paths      : [e1]
}


# print per event timing for ::event entry points
# services.Timing: { }
# print 
services.scheduler.wantSummary: true
