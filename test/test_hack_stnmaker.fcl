# -*- mode: tcl -*-
# $Id: test_hack_stnmaker.fcl,v 1.4 2014/03/21 05:22:31 murat Exp $
# $Author: murat $
# $Date: 2014/03/21 05:22:31 $
#
# Original author Rob Kutschke

#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"

#                             Give this process a name
process_name : hackStrip

# Read events from a file (made by example 3)
source : {
    module_type : RootInput
    fileNames   :  ["/mu2e/data/personal/murat/dev2/mixing_geom_01_disk_670_360_670.root"]
    maxEvents : 500
}
#------------------------------------------------------------------------------
# services
#------------------------------------------------------------------------------
services : {
    message : @local::mf_debugging

    # Adjust configuration of message logger:
    # Load the standard message logger configuration:
    # Threshold=Info (from using mf_interactive). 
    # Limit of 5 per category; then exponential backoff.
    #  message.destinations.log.default.limit : 5
    
    
    TFileService : { fileName   : "validate_calpatrec_stnmaker.root" }
#    RandomNumberGenerator : { }

    user : {
	GeometryService        : { inputFile      : "murat/geom/geom_01.txt" }
	ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt" }
	GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
	G4Helper               : { }
#	SeedService            : @local::automaticSeeds
    }

} # close of services block
#------------------------------------------------------------------------------
# physics
#------------------------------------------------------------------------------
physics : {
    # sequence: e-, e+, mu-, mu+
    producers : {
	makeSH         : @local::makeSH
	MakeStereoHits : @local::MakeStereoHits
	FlagStrawHits  : @local::FlagStrawHits
	FlagBkgHits    : @local::FlagBkgHits
	TrkPatRec      : @local::TrkPatRecDownstreameMinus
#------------------------------------------------------------------------------
# use "hacked" version of the clustering module to pass cluster to the 
# straw hit selection module 
#------------------------------------------------------------------------------
	makeCaloCluster: {
	    module_type            : MakeCaloClusterHack
	    diagLevel              : 0
	    generatorModuleLabel   : generate
	    caloCrystalModuleLabel : CaloCrystalHitsMaker
	    g4ModuleLabel          : g4run
	    #caloReadoutModuleLabel: CaloReadoutHitsMaker
	    caloClusterAlgorithm   : closest
	    caloClusterSeeding     : energy
	    #     caloClusterSeeding    : time
	    #      deltaTime              : 10.0 #ns
	    nCryPerCrystal         : 1
	    EnoiseCut              :  0.10 # MeV
	    EminCluster            :  5.   # this is a cut on the seed crystal energy in MeV
	    MinCalPatRecSeedEnergy : 60.   # min CalPatRec seed cluster energy in MeV
	    maxFullPrint           : 201
	}

	trkExtrapol : {
	    module_type                  : TrkExtrapol
	    diagLevel                    : 1
	    fitterModuleLabel            : TrkPatRec
	    maxNumberStoresPoints        : 1
	    # MC truth finder, analyzer configuration
	    KalFitMC : {
	    }        
	}

	caloMatching : {
	    module_type                  : CaloMatching
	    diagLevel                    : 1
	    fitterModuleLabel            : TrkPatRec
	    trkToCaloExtrapolModuleLabel : trkExtrapol
	    caloClusterModuleLabel       : makeCaloCluster
	    outPutNtup                   : 0
	    caloClusterAlgorithm         : closest
	    caloClusterSeeding           : energy
	}

	pidDem : {
	    module_type       : ParticleID
	    fitterModuleLabel : TrkPatRec
	    fitparticle       : 11
	    fitdirection      : 0
	    verbosity         : 0
	    diagLevel         : 1 
	    doDisplay         : false
	}
#------------------------------------------------------------------------------
# modules for the 'hack' path
#------------------------------------------------------------------------------
	makeSHnew: {
	    module_type             : MakeStrawHitsNew
	    diagLevel               : 1
	    StrawHitCollectionLabel : makeSH
	    caloClusterModuleLabel  : makeCaloCluster
	    maxEemc                 : 60.0
	    t1                      : -70.0
	    t2                      : 20.0
	}

	MakeStereoHitsHack: {
	    module_type             : MakeStrawHitPositions
	    StrawHitCollectionLabel : makeSHnew
	}

	FlagStrawHitsHack : {
	    module_type                     : FlagStrawHits
	    StrawHitCollectionLabel         : makeSHnew
	    StrawHitPositionCollectionLabel : MakeStereoHitsHack
	    maximumRadius                   : [680,640]
	}
	
	FlagBkgHitsHack : {
	    module_type                     : FlagBkgHits
	    StrawHitCollectionLabel         : makeSHnew
	    StrawHitPositionCollectionLabel : MakeStereoHitsHack
	    StrawHitFlagCollectionLabel     : FlagStrawHitsHack
	    ClusterStrawHits  : {
		BackgroundMask : []
		SignalMask     : ["EnergySelection","TimeSelection"]
	    }
	}

	calPatRec : {
	    module_type                             : CalPatRec
	    StrawHitCollectionLabel                 : makeSHnew
	    StrawHitPositionCollectionLabel         : MakeStereoHitsHack
	    StereoHitCollectionLabel                : MakeStereoHitsHack
	    StrawHitFlagCollectionLabel             : FlagBkgHitsHack
	    includeCaloInfo			    : 0
	    FindTimePeaks                           : false
	    # Kalman fit configuration for the helix seed fit
	    SeedFit : {
                maxiter                                 : 3
                materialCorrection                      : false
                seedsmear       			: 10000
                maxhitchi                               : 5.0
                hiterr                                  : [ 5.0, 1.44 ]
                ambiguityStrategy       		: [0,0]
		t0Tolerance				: [5.0,5.0]
		initT0					: true 
		updateT0				: false
	    }
	    # Kalman fit configuration for the final track fit
	    KalFit : {
                materialCorrection                      : true
		mingap					: 1.0
		hiterr 					: [ 5.0, 1.5, 0.5, 0.25, 0.125, 0.05, 0.0, 0.0, 0.0]
		ambiguityStrategy    			: [ 0, 0, 2, 2, 2, 2, 2, 2, 2 ]
		t0Tolerance				: [2.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.2, 0.2, 0.1]
		initT0					: true
		updateT0				: true
		HitAmbigPenalty 			: false
		HitMinDrift 				: 0.1
		ZeroDriftPenalty 			: 0.05
		Neutralize 				: true
		fieldCorrection				: true
	    }
	    HelixFit : {
		diagLevel                               : 0
		debugLevel                              : 0
	    }
	    TimeSelectionBits : ["EnergySelection","TimeSelection","RadiusSelection"]
	    HelixFitSelectionBits : ["EnergySelection","TimeSelection","RadiusSelection"]
	    KalmanFitSelectionBits : []
	    BackgroundSelectionBits : ["DeltaRay","Isolated"]
	}
	
	trkExtrapolHack : {
	    module_type                  : TrkExtrapol
	    diagLevel                    : 1
	    fitterModuleLabel            : calPatRec
	    maxNumberStoresPoints        : 1
	    # MC truth finder, analyzer configuration
	    KalFitMC : {
	    }        
	}

	caloMatchingHack : {
	    module_type                  : CaloMatching
	    diagLevel                    : 1
	    fitterModuleLabel            : calPatRec
	    trkToCaloExtrapolModuleLabel : trkExtrapolHack
	    caloClusterModuleLabel       : makeCaloCluster
	    outPutNtup                   : 0
	    caloClusterAlgorithm         : closest
	    caloClusterSeeding           : energy
	}

	pidDemHack : {
	    module_type       : ParticleID
	    fitterModuleLabel : calPatRec
	    fitparticle       : 11
	    fitdirection      : 0
	    verbosity         : 0
	    diagLevel         : 1 
	    doDisplay         : false
	}
    }
#------------------------------------------------------------------------------
# event display (optional)
#------------------------------------------------------------------------------
    filters : {
	muHitDisplay: {
	    module_type                  : MuHitDisplay # the class name
	    debugBits                    : { }          # need for TAnaModule
	    interactiveMode              : 1
	    
	    generatorModuleLabel         : generate
	    g4ModuleLabel                : g4run
	    strawHitMakerModuleLabel     : makeSHnew
	    strawHitPosMakerModuleLabel  : MakeStereoHitsHack
	    strawHitFlagMakerModuleLabel : FlagStrawHitsHack
	    trkPatRecModuleLabel         : calPatRec
	    trkExtrapol                  : trkExtrapolHack
	    trkCalMatch                  : caloMatchingHack
	    # if set to true, all hits will be displayed unconditionally
	    # otherwise, display only hits with right flags
	    displayBackgroundHits        : false
	    useStereoHits                : true

	    #      goodHitMask                 : ["EnergySelection","RadiusSelection","TimeSelection"]
	    goodHitMask                  : ["EnergySelection", "RadiusSelection"]
	    badHitMask                   : ["DeltaRay", "Isolated"]
	    
	    trackerStepPoints            : tracker
	    minHits                      : 5
	    clickToAdvance               : true
	    printHits                    : false
	    timeWindow                   : 100000.
	    #	timeWindow           : 50.
	}
#------------------------------------------------------------------------------
# Stntuple maker sequence
#------------------------------------------------------------------------------
      InitStntuple : { 
	  module_type       : InitStntuple
	  module_name       : InitStntuple

	  histFileName      : "validate_calpatrec.stn"
	  splitLevel        : 0

	  debugBits         : { 
	      # bit0:1  
	      # bit1:1 
	      # bit51:1
	  }
      }
#------------------------------------------------------------------------------
# tracking collections come from the current process
#------------------------------------------------------------------------------
      StntupleMaker : { 
	  module_type       : StntupleMaker
	  module_name       : StntupleMaker

	  processName       : test

	  strawHitMaker       : makeSH
	  caloCrystalHitMaker : CaloCrystalHitsMaker
	  caloClusterMaker    : makeCaloCluster
	  trkPatRecDem        : TrkPatRec
	  trkExtrapol         : trkExtrapol
	  trkCalMatch         : caloMatching
	  pidDem              : pidDem

	  makeCalData         : 1
	  makeStrawData       : 1
	  makeTracks          : 1
	  makeClusters        : 1
                                              # second track block
	  makeTracks2          : 1
	  strawHitMaker2       : makeSHnew
	  caloCrystalHitMaker2 : CaloCrystalHitsMaker
	  caloClusterMaker2    : makeCaloCluster
	  trkPatRecDem2        : calPatRec
	  trkExtrapol2         : trkExtrapolHack
	  trkCalMatch2         : caloMatchingHack
	  pidDem2              : pidDemHack
	  
			      
	  minTActive          : 0.
	  debugBits           : { 
	      # bit0:1  
	      # bit1:1 
	      # bit51:1
	  }
      }

      FillStntuple : { 
	  module_type       : FillStntuple
	  module_name       : FillStntuple

	  debugBits         : { 
	      # bit0:1  
	      # bit1:1 
	      # bit51:1
	  }
      }
    }

    analyzers: {
	# Look at the hits from G4.
    }
#------------------------------------------------------------------------------
# paths
# assume all digitized hits are coming from teh input file, no random numbers 
# at the reco level
#------------------------------------------------------------------------------
    p2 : [
	  makeCaloCluster, 
#
	  MakeStereoHits, FlagStrawHits, FlagBkgHits, 
	  TrkPatRec,
	  trkExtrapol, caloMatching,
	  pidDem,
#
	  makeSHnew,
	  MakeStereoHitsHack, FlagStrawHitsHack, FlagBkgHitsHack, 
	  calPatRec,
	  trkExtrapolHack, caloMatchingHack,
#	  muHitDisplay
	  pidDemHack,
#
          InitStntuple, StntupleMaker, FillStntuple
	 ]

    #  e1 : [hitDisplay]
    #  e1 : [outfile]
    e1 : []

    trigger_paths  : [p2]
    end_paths      : [e1]
    
}

outputs: {
  outfile : {
    module_type    : RootOutput
      fileName       : "test_Hack_1.strip.root"
    SelectEvents  : { SelectEvents: [ p2 ] }
    outputCommands : ['keep *_*_*_*'
#                   , 'drop mu2ePointTrajectoryMapVector_*_*_*'
#                   , 'drop mu2eSimParticles_*_*_*'
# Uncomment the above line to reduce file size.
                     ]  
  }
}
services.scheduler.wantSummary: true

#------------------------------------------------------------------------------
# print per event timing for ::event entry points
#------------------------------------------------------------------------------
#     services.Timing: { }
#------------------------------------------------------------------------------
# print timing summary
#------------------------------------------------------------------------------
# services.scheduler.wantSummary: true
# services.user.SeedService.baseSeed         :   0
# services.user.SeedService.maxUniqueEngines :  20
