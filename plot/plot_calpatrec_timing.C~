//
           33.0  .........      60.93 / 61.29        10'157 / 10'217      KalRep::updateSites() [28]
[29]       33.0      60.93       0.08 / 60.85        10'157             KalRep::updateSites(int, int, double, trkDirection)
           28.3  .........      52.38 / 52.38         8'732 / 8'732       KalBend::update(TrkDifPieceTraj const*, double) [31]
            2.3  .........       4.26 / 4.26            710 / 710         KalMaterial::update(TrkDifPieceTraj const*, double) [156]
            2.2  .........       4.06 / 4.06            676 / 676         KalHit::update(TrkDifPieceTraj const*, double) [164]
            0.0  .........       0.05 / 0.31              8 / 51          KalSite::kalHit() [629]
            0.0  .........       0.02 / 5.51              3 / 919         _init [136]
            0.0  .........       0.02 / 0.10              3 / 16          std::vector<KalSite*, std::allocator<KalSite*> >::operator[](unsigned long) [1118]
            0.0  .........       0.02 / 0.03              3 / 5           KalSite::isActive() const [1834]
            0.0  .........       0.02 / 0.02              3 / 3           KalSite::kalMaterial() [2439]
            0.0  .........       0.01 / 0.02              2 / 3           KalHit::isActive() const [2360]
            0.0  .........       0.01 / 0.01              2 / 2           KalRep::stopsIn(KalMaterial const*) const [3115]
            0.0  .........       0.01 / 0.03              1 / 5           double const& std::max<double>(double const&, double const&) [1803]
            0.0  .........       0.01 / 0.01              1 / 1           KalMaterial::momentumChange(trkDirection) const [6046]



//-----------------------------------------------------------------------------
void plot_(const char* Filename, int PrintFlag) {

  TCanvas* c = new TCanvas("c_eff_ladder","Trk Reco Efficiency Summary",0,0,1500,900);

  c->cd();

  TH1F* h_mpr = new TH1F("h_tpr","TrkPatRec Efficiency",10,0,10);
  //  TH1F* h_tpr = new TH1F("h_tpr","TrkPatRec   Efficiency",10,0,10);

  float dat_mpr[10], dat_tpr[10];


  dat_mpr[0] = gh1(Filename,"TrackRecoEffAna","evt_0/nhs")->GetEntries();
  dat_mpr[1] = gh1(Filename,"TrackRecoEffAna","evt_1/nhs")->GetEntries();
  dat_mpr[2] = gh1(Filename,"TrackRecoEffAna","evt_2/nhs")->GetEntries();
  dat_mpr[3] = gh1(Filename,"TrackRecoEffAna","evt_3/nhs")->GetEntries();
  dat_mpr[4] = gh1(Filename,"TrackRecoEffAna","evt_4/nhs")->GetEntries();
  dat_mpr[5] = gh1(Filename,"TrackRecoEffAna","evt_5/nhs")->GetEntries();
  dat_mpr[6] = gh1(Filename,"TrackRecoEffAna","evt_6/nhs")->GetEntries();
  dat_mpr[7] = gh1(Filename,"TrackRecoEffAna","evt_7/nhs")->GetEntries();
  dat_mpr[8] = gh1(Filename,"TrackRecoEffAna","evt_8/nhs")->GetEntries();
  dat_mpr[9] = gh1(Filename,"TrackRecoEffAna","evt_9/nhs")->GetEntries();


  float v1, v2;

  for (int i=1; i<=10; i++) {
    h_mpr->GetXaxis()->SetBinLabel(i,cut_label[i-1]);

    v1 = dat_mpr[i-1]/(dat_mpr[0]+0.);

    h_mpr->SetBinContent(i,v1);
  }

  h_mpr->SetTitle(Form("TrkPatRec efficiency: %s",Filename));
  h_mpr->SetStats(0);
  h_mpr->SetMinimum(0.);
  h_mpr->Draw();
  h_mpr->Draw("same,text45");

  TLegend* leg = new TLegend(0.7,0.7,0.9,0.9);
  leg->SetFillStyle(0);
  leg->SetBorderSize(0);

  //  leg->AddEntry(h_mpr,"TrkPatRec+CalPatRec","f");
  leg->AddEntry(h_mpr,"TrkPatRec","f");

  leg->Draw();

  if (PrintFlag) {
    c->Print("eff_cuts_10_ladder.eps");
  }
}
