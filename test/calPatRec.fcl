# -*- mode: tcl -*-
# Make input file makeStrawHitsHack_tcalm002.root
#
# $Id: calPatRec.fcl,v 1.2 2015/01/21 14:44:12 murat Exp $
# $Author: murat $
# $Date: 2015/01/21 14:44:12 $

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"

#include "murat/fcl/prolog.fcl"

process_name : CalPatRec

source : {
    module_type :  RootInput
    maxEvents   :  -1
    firstRun    :  1
}

outputs: {
    outfile : {
	module_type : RootOutput
	fileName    : "calPatRec.root"
    }
}

services : {
    message               : @local::default_message
    TFileService          : { fileName : "calPatRec.hist"}
    RandomNumberGenerator : { }
    user : {
	GeometryService        : { inputFile      : "murat/geom/geom_01.txt" }
	ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"         }
	GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt"    }
	G4Helper               : { }
	SeedService            : @local::automaticSeeds
    }
}

physics : {
    producers: {
#------------------------------------------------------------------------------
# calorimeter reconstruction - pass T0 and EMax to MakeStrawHitsHack
#------------------------------------------------------------------------------
	CaloReadoutHitsMaker : @local::CaloReadoutHitsMaker
	CaloCrystalHitsMaker : @local::CaloCrystalHitsMaker
#	MakeCaloCluster      : @local::MakeCaloCluster
	MakeCaloCluster      : @local::MakeCaloClusterHack 
	makeSH               : @local::makeSH
	MakeSHHack           : @local::MakeStrawHitsHack  
#	MakeSHHack           : @local::makeSH
	MakeStereoHits       : @local::MakeStereoHits
	FlagStrawHits        : @local::FlagStrawHits
	FlagBkgHits          : @local::FlagBkgHits
#	TrkPatRec             : @local::TrkPatRec
        TrkPatRec            : @local::TrkPatRecHack
	TrkExtrapol          : @local::TrkExtrapol
	CaloMatching         : @local::CaloMatching
#	PidDem               : @local::PidDem
# 	randomsaver          : @local::randomsaver
    }

    filters : {
        MuHitDisplay         : @local::MuHitDisplay
    }
    analyzers: {
    }
#------------------------------------------------------------------------------
#  p2 : read events from the input file
#------------------------------------------------------------------------------
    p2 : [MakeCaloCluster,
	  MakeSHHack, 
	  MakeStereoHits, FlagStrawHits, FlagBkgHits, TrkPatRec,
	  TrkExtrapol, CaloMatching,
#	  PidDem, 
	  MuHitDisplay
#	  , randomsaver 
	 ]
    
    e1 : [] 

    trigger_paths  : [p2]
    end_paths      : []

}

services.user.SeedService.baseSeed         :   0
services.user.SeedService.maxUniqueEngines :  20

physics.producers.CaloReadoutHitsMaker.diagLevel     : 0
physics.producers.CaloReadoutHitsMaker.maxFullPrint  : 0
physics.producers.CaloCrystalHitsMaker.diagLevel     : 0
physics.producers.CaloCrystalHitsMaker.maxFullPrint  : 0

physics.producers.MakeSHHack.maxEemc  :  70.
physics.producers.MakeSHHack.t1       : -80.
physics.producers.MakeSHHack.t2       :  30.

physics.producers.MakeStereoHits.StrawHitCollectionLabel : MakeSHHack
physics.producers.FlagStrawHits.StrawHitCollectionLabel  : MakeSHHack
physics.producers.FlagBkgHits.StrawHitCollectionLabel    : MakeSHHack
physics.producers.TrkPatRec.StrawHitCollectionLabel      : MakeSHHack

physics.filters.MuHitDisplay.strawHitMakerModuleLabel    : MakeSHHack
#
services.scheduler.wantSummary: true

