# -*- mode: tcl -*-
# -*- mode : tcl -*- 
# Example of running event mixing.
#
# $Id: mixing_geom_01_disk_670_360_670.fcl,v 1.2 2015/01/23 22:11:31 murat Exp $
# $Author: murat $
# $Date: 2015/01/23 22:11:31 $

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"

# Give this job a name.
process_name : MixedEvents01

# Conversion electron input file.
source : {
    module_type : RootInput
#     fileNames   : [ "/grid/fermiapp/mu2e/DataFiles/ExampleDataFiles/Workbook/conversionOnly_04_data.root" ]
    fileNames   : [ "/mu2e/data/users/murat/dev2/conversion_01_disk_670_360_670.root"]
    maxEvents   : 10000
}
#------------------------------------------------------------------------------
# define output file
#------------------------------------------------------------------------------
outputs: {
    outfile : {
	module_type   :   RootOutput
	fileName      :   "out/mixing_geom_01_disk_670_360_670.root"
    }
}

services : {
    message               : @local::default_message
    TFileService          : { fileName : "out/mixing_geom_01_disk_670_360_670.hist" }
    RandomNumberGenerator : { }
    
    user : {
	GeometryService        : { inputFile      : "murat/geom/geom_01_disk_670_360_670.txt" }
	ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"           }
	GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt"      }
	SeedService            : @local::automaticSeeds
    }
}

physics : {
    producers: {
	dioMixer             : @local::dioMixer
	neutronMixer         : @local::neutronMixer
	protonMixer          : @local::protonMixer
	photonMixer          : @local::photonMixer
	
	makeSH               : @local::makeSH
	CaloReadoutHitsMaker : @local::CaloReadoutHitsMaker
	CaloCrystalHitsMaker : @local::CaloCrystalHitsMaker
	randomsaver          : @local::randomsaver
  }

  analyzers: {
      checkhits: {
	  module_type            : ReadBack
	  generatorModuleLabel   : generate
	  g4ModuleLabel          : g4run
	  caloReadoutModuleLabel : CaloReadoutHitsMaker
	  diagLevel              : 0
	  minimumEnergy          : 0.000
	  maxFullPrint           : 0
	  nCrystalNbins          : 100
      }

      readStrawHits: {
	  module_type      : ReadStrawHit
	  makerModuleLabel : makeSH
	  diagLevel        : 0
	  maxFullPrint     : 0
	  nHitsUpperLimit  : 4000
      }
  }

    p1 : [ dioMixer, neutronMixer, protonMixer, photonMixer,
	   makeSH, CaloReadoutHitsMaker, CaloCrystalHitsMaker, randomsaver ]
    e1 : [ checkhits, readStrawHits, outfile ]

    trigger_paths  : [p1]
    end_paths      : [e1]

}
#------------------------------------------------------------------------------
# Mixing input files and multiplicities: 
#------------------------------------------------------------------------------
physics.producers.dioMixer.fileNames     : [ "/mu2e/data/users/murat/dev2/dio_000_105_001_disk_670_360_670.root" ]
physics.producers.neutronMixer.fileNames : [ "/mu2e/data/users/murat/dev2/enu_000_100_001_disk_670_360_670.root" ]
physics.producers.protonMixer.fileNames  : [ "/mu2e/data/users/murat/dev2/epr_000_300_001_disk_670_360_670.root" ]
physics.producers.photonMixer.fileNames  : [ "/mu2e/data/users/murat/dev2/eph_000_007_001_disk_670_360_670.root" ]
physics.producers.dioMixer.mean          : 264
physics.producers.neutronMixer.mean      : 413
physics.producers.protonMixer.mean       :  45
physics.producers.photonMixer.mean       : 303

// Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.user.SeedService.baseSeed         :  0
services.user.SeedService.maxUniqueEngines :  20
