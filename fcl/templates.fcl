# -*- mode:tcl -*-
#------------------------------------------------------------------------------
# services section
#------------------------------------------------------------------------------
services : {
    message               : @local::default_message
    TFileService          : { fileName : "Stntuple_fcl_templates_fcl.hist" }
    RandomNumberGenerator : { }
    #   Timing                : { }fcl/

    user : {
        GeometryService        : { inputFile      : "JobConfig/cd3/geom_baseline.txt"      }
        ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"        }
        GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt"   }
        BTrkHelper             : @local::BTrkHelperDefault
        G4Helper               : { }
        SeedService            : { @table::automaticSeeds
	    baseSeed         :  0
	    maxUniqueEngines :  20
	}
    }
}
#------------------------------------------------------------------------------
# looks that services.scheduler doesn't exist by default
#
# fileMode:MERGE prevents jobs from growing their footprint in memory linearly with time
#------------------------------------------------------------------------------
services.scheduler.wantSummary: true
services.scheduler.fileMode   : MERGE

murat : { 
    producers : {
	generate: { @table::StoppedMuonConversionGun    }
	g4run   : { @table::mu2eg4runDefaultSingleStage }
	@table::EventMixing.producers
    }
}

murat : {
    producers: {
	@table::murat.producers

  	egun : { @table::StoppedParticleReactionGun # p(e)=105 MeV/c
	    physics : {
		pdgId            :  11
		elow             : 105.0010
		ehi              : 105.0015
		spectrumVariable : "totalEnergy"
		spectrumShape    : "flat"
	    }
	}

  	mgun : { @table::StoppedParticleReactionGun # p(mu)=105 MeV/c
	    physics : {
		pdgId            :  13
		elow             : 148.9583      
		ehi              : 148.9585
		spectrumVariable : "totalEnergy"
		spectrumShape    : "flat"
	    }
	}
#------------------------------------------------------------------------------
# hit makers
#------------------------------------------------------------------------------
	MakeCaloCompressedHits : { @table::MakeCaloCompressedHits }
	MakeCaloReadoutHits    : { @table::MakeCaloReadoutHits    }
	MakeCaloCrystalHits    : { @table::MakeCaloCrystalHitsNew }
#------------------------------------------------------------------------------
# calorimeter digi maker
#------------------------------------------------------------------------------
	CaloDigisFromStepPointMCs   :{ @table::CaloDigisFromStepPointMCs   }
	CaloHitsFromCaloDigis       :{ @table::CaloHitsFromCaloDigis       }
	CaloCrystalHitsFromCaloHits :{ @table::CaloCrystalHitsFromCaloHits }
#------------------------------------------------------------------------------
# TrkPatRec and CalPatRec modules
#------------------------------------------------------------------------------
	@table::Tracking.producers      # defined in TrkPatRec
	@table::CaloCluster.producers   # defined in CaloCluster
	@table::CalPatRec.producers
	@table::TrackCaloMatching.producers
#------------------------------------------------------------------------------
# higher-level reconstruction
# ParticleID, AvikPID - tracker-only particle ID
# TrackCaloMatching doesn't explicitly know anything about the particle mass, 
# it is just using the extrapolation results 
#------------------------------------------------------------------------------
	ParticleID           : { @table::ParticleID fitterModuleLabel:MergePatRec    }
	ParticleIDDem        : { @table::ParticleID fitterModuleLabel:MergePatRecDem }
	ParticleIDDmm        : { @table::ParticleID fitterModuleLabel:MergePatRecDmm }

	AvikPID              : { @table::AvikPID           
	    trkPatRecDemModuleLabel : MergePatRecDem 
	    trkPatRecDmmModuleLabel : MergePatRecDmm 
	}
    }
#------------------------------------------------------------------------------
# event mixing modules - all clones of the same module.
# each clone takes certain collections from the input file and adds them to the event
#------------------------------------------------------------------------------
    filters: {
#	@table::EventMixing.filters
	flashMixer    : { @table::mixerTemplate 
	    fileNames : @local::bgHitFiles detail:{ @table::mixerTemplate.detail g4ModuleLabel:flashMixer genModuleLabel:flashMixer }
	}
	ootMixer      : { @table::mixerTemplate
	    fileNames : @local::bgHitFiles detail:{ @table::mixerTemplate.detail g4ModuleLabel:ootMixer genModuleLabel:ootMixer     }
	}
	dioMixer      : { @table::mixerTemplate
	    fileNames : @local::bgHitFiles detail:{ @table::mixerTemplate.detail g4ModuleLabel:dioMixer genModuleLabel:dioMixer     }
	}
	neutronMixer  : { @table::mixerTemplate 
	    fileNames : @local::bgHitFiles detail:{ @table::mixerTemplate.detail g4ModuleLabel:neutronMixer genModuleLabel:neutronMixer}
	}
	photonMixer   : { @table::mixerTemplate
	    fileNames : @local::bgHitFiles detail:{ @table::mixerTemplate.detail g4ModuleLabel:photonMixer genModuleLabel:photonMixer }
	}
	protonMixer   : { @table::mixerTemplate
	    fileNames : @local::bgHitFiles detail:{ @table::mixerTemplate.detail g4ModuleLabel:protonMixer genModuleLabel:protonMixer }
	}
#------------------------------------------------------------------------------
# Andrej's filter
# Reject events with no hits from signal-like tracks in the detectors.  
# The filter does not look at the background hits from mixed events.
#------------------------------------------------------------------------------
	detectorFilter : { @table::FilterStepPointMomentum }
#------------------------------------------------------------------------------
# Stntuple modules
#------------------------------------------------------------------------------
	@table::CalPatRec.filters
	@table::Stntuple.filters
    }

    outputs: {
	detectorOutput : {
	    module_type : RootOutput
	    SelectEvents: { SelectEvents: [] }
	    outputCommands:   [ "keep *_*_*_*"]
	}
    }
}
#------------------------------------------------------------------------------
# sequences: can't define recursively within one namespace
#------------------------------------------------------------------------------
murat.gen_g4          : [ generate, g4run, detectorFilter]
murat.gen_g4_time_map : [ @sequence::murat.gen_g4, @sequence::EventMixing.TimeMaps ]
murat.mix             : [ dioMixer, protonMixer, neutronMixer, photonMixer, ootMixer, flashMixer ]
murat.mix_time_map    : [ @sequence::murat.mix, @sequence::EventMixing.TimeMaps ]
murat.g4_mix_time_map : [ @sequence::murat.gen_g4, @sequence::murat.mix, @sequence::EventMixing.TimeMaps ]
murat.digis           : [ MakeCaloReadoutHits, @sequence::Tracking.DigiSim ]

murat.cal_reco : [ MakeCaloCrystalHits, MakeCaloProtoCluster, MakeCaloCluster ]

murat.cpr_reco : [ @sequence::CalPatRec.calpatrec, 
		   MergePatRecCpr, 
		   @sequence::TrackCaloMatching.matching_cpr ]

murat.tpr_reco : [ @sequence::Tracking.TPRDownstreameMinus , 
		   MergePatRecTpr, 
		   @sequence::TrackCaloMatching.matching_tpr ]

murat.mpr_reco : [ @sequence::Tracking.TPRDownstreameMinus , 
		   @sequence::CalPatRec.calpatrec, 
		   MergePatRec, 
		   @sequence::TrackCaloMatching.matching ]

murat.dem_reco : [ @sequence::Tracking.TPRDownstreameMinus , 
		   @sequence::CalPatRec.calpatrec_dem, 
		   MergePatRecDem, 
		   @sequence::TrackCaloMatching.matching_dem ]

murat.dmm_reco : [ @sequence::Tracking.TPRDownstreammuMinus, 
		   @sequence::CalPatRec.calpatrec_dmm, 
		   MergePatRecDmm, 
		   @sequence::TrackCaloMatching.matching_dmm ]

murat.uem_reco : [ @sequence::Tracking.TPRUpstreameMinus  , MergePatRecUem, @sequence::TrackCaloMatching.matching_uem ]
murat.umm_reco : [ @sequence::Tracking.TPRUpstreammuMinus , MergePatRecUmm, @sequence::TrackCaloMatching.matching_umm ]
murat.uep_reco : [ @sequence::Tracking.TPRUpstreamePlus   , MergePatRecUep, @sequence::TrackCaloMatching.matching_uep ]
murat.ump_reco : [ @sequence::Tracking.TPRUpstreammuPlus  , MergePatRecUmp, @sequence::TrackCaloMatching.matching_ump ]

