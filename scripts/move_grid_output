#!/bin/bash
# call   : move_grid_output  jobid output_dir dsname doit
# ------
#
#  assume that the stage directory is /mu2e/data/outstage/$USER
#
# working example: 
# . murat/scripts/move_grid_output 15158701 /mu2e/data/users/murat/datasets e0000002 .  
# file extentions recognized: .art .log .hist .stn
#------------------------------------------------------------------------------
 stage_dir=/mu2e/data/outstage/$USER
     jobid=$1 # 15160119
output_dir=/mu2e/data/users/$USER/datasets
    dsname=$3
      doit=$4

echo stage_dir=$stage_dir
echo     jobid=$jobid
echo    dsname=$dsname

cmd_prefix="echo" ; 
if [ ".$doit" != "." ] ; then cmd_prefix="" ; fi
#------------------------------------------------------------------------------
# find the GRID output directory corresponding to job ID
#------------------------------------------------------------------------------
job=`ls $stage_dir | grep $jobid`;
jobname=`echo $job | awk -F . '{print $1}'`

if [ $2 != "." ] ; then output_dir=$2 ; fi
od=$output_dir/$dsname

echo job=$job jobname=$jobname od=$od
#------------------------------------------------------------------------------
# create output directories
#------------------------------------------------------------------------------
if [ ! -d $od      ] ; then mkdir $od      ; fi
if [ ! -d $od/log  ] ; then mkdir $od/log  ; fi
if [ ! -d $od/hist ] ; then mkdir $od/hist ; fi

dir=$stage_dir/$job
echo dir=$dir

for subdir in `ls $dir` ; do
#------------------------------------------------------------------------------
# check if the job finished with RC=0
# skip directories corresponding to non-completed sections like '00015.wuue'
# skip segments with RC != 0
#------------------------------------------------------------------------------
 
#  echo $subdir
   sd=$dir/$subdir
   nf=`echo $subdir | awk -F . '{print NF}'` 
   if [ $nf == 1 ] ; then

       index=`echo $subdir | awk '{printf "%04i", $1}'`
       echo ------------------------ sd=$sd section=$index: 

       x=`cat $sd/mu2e.log | grep "mu2egrid exit status"`; 
       rc=`echo $x | awk '{print $4}'`

       if [ ".$rc" == ".0" ] ; then
	   if [ ${dsname:3:1} != "s" ] ; then 
#------------------------------------------------------------------------------
# PRODUCTION dataset: move stntuple files
#------------------------------------------------------------------------------
	       $cmd_prefix mv $sd/$jobname.root $od/$dsname.000001$index
	       $cmd_prefix mv $sd/$jobname.hist $od/hist/$jobname.$index.hist
	   else 
#------------------------------------------------------------------------------
# SNTUPLE dataset: move stntuple files
# STNTUPLE dataset may also have DST files woth the extention .art produced 
#------------------------------------------------------------------------------
	       stn_files=`ls $sd/*.stn`
	       for f in $stn_files ; do
		   $cmd_prefix mv $f  $od/$dsname.000001$index
	       done

	       dst_files=`ls $sd/*.art`
	       dst_dsname=${dsname:0:3}"a"${dsname:4}

	       odd=$output_dir/$dst_dsname
	       if [ ! -d $odd ] ; then mkdir -p $odd ; fi

	       for f in $dst_files ; do
		   $cmd_prefix mv $f $odd/$dst_dsname.000001$index
	       done
#------------------------------------------------------------------------------
# move histogram files
#------------------------------------------------------------------------------
	       hist_files=`ls $sd/*.hist`
	       for f in $hist_files ; do
		   $cmd_prefix mv $f  $od/hist/`basename $f`.$index
	       done
	   fi
#------------------------------------------------------------------------------
# move log files
#------------------------------------------------------------------------------
	   $cmd_prefix mv $sd/mu2e.log      $od/log/$jobname.$index.log
	   $cmd_prefix mv $sd/mu2e.fcl      $od/log/$jobname.$index.fcl
	   $cmd_prefix mv $sd/sysinfo.log   $od/log/$jobname.$index.sysinfo.log
       else
	   if [ ".$rc" == "." ] ; then
	       x=`cat $sd/mu2e.log | grep "Art has completed"`;
	       rc=`echo $x | awk '{print $9}'`
	   fi
	   echo .... ERROR: job finished with RC=$rc, do not move its output
       fi
   else
	printf " %10s : GRID ERROR, job not completed, IGNORE ITS OUTPUT\n" $subdir
   fi
done
# 
#------------------------------------------------------------------------------
# concatenation of the output data files
# 2014-02-06: no more concatenation 
#------------------------------------------------------------------------------
#concat_list=$jobname.$jobid.concat_list

#for subdir in `ls $dir` ; do
#  echo $subdir
#  sd=$dir/$subdir
#  ls $sd/$jobname.root
#done >| $concat_list

#------------------------------------------------------------------------------
# concatenation, make sure we are not overwriting the data file
#------------------------------------------------------------------------------
#output_file=out/${jobname}.root
#
#if [ -f $output_file ] ; then
#    dd=`stat -c %y $output_file | awk '{print $1}'`
#    $cmd_prefix mv $output_file $output_file.$dd
#fi
#
#if [ ".$doit" == "." ] ; then 
#    $cmd_prefix mu2e -c murat/test/concatenation.fcl \
#	-S $concat_list -o $output_file  \>\| $od/${jobname}_concatenation.log 2\>\&1 \&
#else
#    $cmd_prefix mu2e -c murat/test/concatenation.fcl \
#	-S $concat_list -o $output_file  >| $od/${jobname}_concatenation.log 2>&1 &
#fi
#------------------------------------------------------------------------------
# no concatenate histogram files
#------------------------------------------------------------------------------
hist_file_list=`ls $dir/*/*.hist`

# echo hist_file_list=$hist_file_list
# echo aaaa

# if [ ".$doit" == "." ] ; then 
#   $cmd_prefix hadd -f ./out/$jobname.hist $hist_file_list \>\| $od/${jobname}_hadd.log 2\>\&1
# else
#  $cmd_prefix hadd -f ./out/$jobname.hist $hist_file_list >| $od/${jobname}_hadd.log 2>&1 
#fi
