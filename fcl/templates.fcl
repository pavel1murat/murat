# -*- mode:tcl -*-
#------------------------------------------------------------------------------
# the templates file should include all standard ones
#------------------------------------------------------------------------------
#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"
#------------------------------------------------------------------------------
# services section
#------------------------------------------------------------------------------
services : {  @table::Services.SimAndReco

    message               : @local::default_message
    TFileService          : { fileName : "murat_fcl_templates_fcl.hist" }
    RandomNumberGenerator : { }
    #   Timing                : { }
#------------------------------------------------------------------------------
# 2017-04-03: JobConfig/cd3/geom_baseline.txt is the same as Mu2eG4/test/geom_01.txt
#             both just include Mu2eG4/geom/geom_common.txt
#------------------------------------------------------------------------------
#    GeometryService        : { inputFile      : "JobConfig/cd3/geom_baseline.txt"      }
#    GeometryService        : { inputFile      : "Mu2eG4/geom/geom_common_current.txt"  }

    GeometryService        : { @table::Services.SimAndReco.GeometryService 
	inputFile      : "Mu2eG4/geom/geom_common.txt"
    }

    ConditionsService      : { @table::Services.SimAndReco.ConditionsService
	conditionsfile : "Mu2eG4/test/conditions_01.txt"        
    }

    GlobalConstantsService : { @table::Services.SimAndReco.GlobalConstantsService
	inputFile      : "Mu2eG4/test/globalConstants_01.txt"   
    }

    SeedService          : { @table::automaticSeeds
	baseSeed         :  0
	maxUniqueEngines :  100
    }

    TimeTracker : {
	printSummary : true
	dbOutput : {
	    filename  : ""
	    overwrite : false
	}
    }
}
#------------------------------------------------------------------------------
# looks that services.scheduler doesn't exist by default
#
# fileMode:MERGE prevents jobs from growing their footprint in memory linearly with time
# 2016-10-14: this command is no longer supported (needed ?)
#------------------------------------------------------------------------------
services.scheduler.wantSummary: true

#------------------------------------------------------------------------------
# at this point I start redefining @table::murat
#------------------------------------------------------------------------------
murat : { @table::murat 

    producers : { @table::murat.producers
#------------------------------------------------------------------------------
# Offline producers
#------------------------------------------------------------------------------
	@table::EventGenerator.producers  # defined in EventGenerator
	@table::Mu2eG4.producers
	@table::TrackerMC.producers       # defined in TrackerMC
	@table::TrkHitReco.producers      # defined in TrkHitReco
	@table::Tracking.producers        # defined in TrkPatRec
	@table::CaloDigiMC.producers      # defined in CaloDigiMC
	@table::CaloDigiMC.producersMC    # defined in CaloDigiMC
	@table::CaloReco.producers        # defined in CaloReco
	@table::CaloCluster.producers     # defined in CaloCluster
	@table::CaloCluster.producersMC   # defined in CaloCluster
	@table::CaloClusterFast.producers # defined in CaloCluster
	@table::CalPatRec.producers
	@table::TrackCaloMatching.producers
	@table::ParticleID.producers

	egun : { @table::EventGenerator.producers.egun
	    muonStops : { @table::EventGenerator.producers.StoppedParticleReactionGun.muonStops
		inputFiles : [ "mergedMuonStops/nts.mu2e.DS-TGTstops.MDC2018a.001002_00000000.root" ]
	    }
	}
    }

}

murat : { @table::murat 
    producers: { @table::murat.producers

  	cePhotos : { @table::murat.producers.StoppedParticleReactionGun # CE + rad corr
	    physics : {
		pdgId            :  11
		elow             :   0
		ehi              : 105
		spectrumVariable : "totalEnergy"
		spectrumShape    : "tabulated"
		spectrumFileName : "murat/data/ce_photos.tbl"
	    }
	}

	generate: { @table::murat.producers.egun  }
	g4run   : { @table::murat.producers.g4run }
    }

#------------------------------------------------------------------------------
# event mixing modules - all clones of the same module.
# each clone takes certain collections from the input file and adds them to the event
#------------------------------------------------------------------------------
    filters: { 
	@table::murat.filters
# FIXME 	@table::EventMixing.filters
#------------------------------------------------------------------------------
# Andrej's filter
# Reject events with no hits from signal-like tracks in the detectors.  
# The filter does not look at the background hits from mixed events.
#------------------------------------------------------------------------------
	detectorFilter : { @table::FilterStepPointMomentum }
#------------------------------------------------------------------------------
# Stntuple modules
#------------------------------------------------------------------------------
	@table::Stntuple.filters
	@table::CalPatRec.filters
    }

    outputs: {
	detectorOutput : {
	    module_type   : RootOutput
	    SelectEvents  : [] 
	    outputCommands: [ "keep *_*_*_*"]
	}
    }
}
#------------------------------------------------------------------------------
# sequences: can't define recursively within one namespace
#------------------------------------------------------------------------------
murat.gen_g4              : [ generate, g4run ]
murat.gen_g4_detFilter    : [ generate, g4run, detectorFilter ]
murat.gen_g4_time_map     : [ @sequence::murat.gen_g4, @sequence::CommonMC.DigiSim ]
# *FIXME* murat.mix_time_map        : [ @sequence::EventMixing.CD3Mixers, @sequence::CommonMC.DigiSim ]
# *FIXME* murat.gen_g4_mix_time_map : [ @sequence::murat.gen_g4_detFilter, @sequence::murat.mix_time_map ]
#------------------------------------------------------------------------------
# digitization
#------------------------------------------------------------------------------
murat.digis               : [ @sequence::CaloDigiMC.DigiSim, @sequence::TrackerMC.DigiSim ]
murat.trk_hits            : [ makeSH, makePH ]
murat.cal_hits            : [ @sequence::CaloReco.Reco, @sequence::CaloDigiMC.TruthMatch ]
#------------------------------------------------------------------------------
# calorimeter reconstruction; fast calorimeter reco includes hit reco w/o MC truth
#------------------------------------------------------------------------------
murat.cal_reco      : [ @sequence::CaloCluster.Reco,  @sequence::CaloCluster.TruthMatch ]
murat.cal_reco_fast : [ @sequence::CaloReco.Reco, @sequence::CaloClusterFast.Reco ]
#------------------------------------------------------------------------------
# downstream track reconstruction
# FlagBkgHits is added to all TrkPatRec sequences, rely on ART executing it just once
#------------------------------------------------------------------------------
murat.cpr_reco : [ @sequence::CalPatRec.reco, 
		   MergePatRecCpr, 
		   @sequence::TrackCaloMatching.matching_cpr ]

murat.tpr_reco : [ FlagBkgHits, @sequence::Tracking.TPRDeM , 
		   MergePatRecTpr, 
		   @sequence::TrackCaloMatching.matching_tpr ]
#------------------------------------------------------------------------------
# track reconstruction DeM, run two algorithms, merge
#------------------------------------------------------------------------------
murat.mpr_reco : [ FlagBkgHits, @sequence::Tracking.TPRDeM , 
		   @sequence::CalPatRec.reco, 
		   MergePatRec, 
		   @sequence::TrackCaloMatching.matching ]

murat.dem_reco : [ FlagBkgHits, @sequence::Tracking.TPRDeM  , 
		   @sequence::CalPatRec.dem_reco, 
		   MergePatRecDem, 
		   @sequence::TrackCaloMatching.matching_dem, AvikPIDNewDem ]

murat.dmm_reco : [ FlagBkgHits, @sequence::Tracking.TPRDmuM , 
		   @sequence::CalPatRec.dmm_reco, 
		   MergePatRecDmm, 
		   @sequence::TrackCaloMatching.matching_dmm, AvikPIDNewDmm ]

murat.dep_reco : [ FlagBkgHits, @sequence::Tracking.TPRDeP   , 
		   @sequence::CalPatRec.dep_reco, 
		   MergePatRecDep, 
		   @sequence::TrackCaloMatching.matching_dep, AvikPIDNewDep ]

murat.dmp_reco : [ FlagBkgHits, @sequence::Tracking.TPRDmuP  , 
		   @sequence::CalPatRec.dmp_reco, 
		   MergePatRecDmp, 
		   @sequence::TrackCaloMatching.matching_dmp, AvikPIDNewDmp ]
#----------------------------------------------------------------------------------------------------
# so far, CalPatRec is not used for upstream reconstruction
#----------------------------------------------------------------------------------------------------
murat.uem_reco : [ FlagBkgHits   , @sequence::Tracking.TPRUeM  , 
		   MergePatRecUem, @sequence::TrackCaloMatching.matching_uem, 
		   AvikPIDNewUem ]

murat.umm_reco : [ FlagBkgHits   , @sequence::Tracking.TPRUmuM , 
		   MergePatRecUmm, @sequence::TrackCaloMatching.matching_umm, 
		   AvikPIDNewUmm ]

murat.uep_reco : [ FlagBkgHits, @sequence::Tracking.TPRUeP  , 
		   MergePatRecUep, @sequence::TrackCaloMatching.matching_uep, 
		   AvikPIDNewUep ]

murat.ump_reco : [ FlagBkgHits, @sequence::Tracking.TPRUmuP , 
		   MergePatRecUmp, @sequence::TrackCaloMatching.matching_ump, 
		   AvikPIDNewUmp ]

murat.paths : {
#------------------------------------------------------------------------------
# generation and digitization, stop before making hits
#------------------------------------------------------------------------------
    path_gen_digi              : [ @sequence::murat.gen_g4_time_map,
				   @sequence::murat.digis
				  ]
#------------------------------------------------------------------------------
# assume hits are reconstructed, rerun reconstruction
#------------------------------------------------------------------------------
    path_reco_stn_tcm          : [ @sequence::murat.cal_reco       ,
				   @sequence::murat.tpr_reco       ,
				   @sequence::murat.cpr_reco       ,
				   @sequence::murat.mpr_reco       ,
				   @sequence::Stntuple.stnmaker_tcm
				  ]
#------------------------------------------------------------------------------
# assume hits are reconstructed, rerun reconstruction
#------------------------------------------------------------------------------
    path_gen_digi_reco_stn_tcm : [ @sequence::murat.gen_g4_time_map,
				   @sequence::murat.digis          ,
				   @sequence::murat.trk_hits       ,
				   @sequence::murat.cal_hits       ,
				   @sequence::murat.cal_reco       , # cal_hits are part of cal_reco
				   @sequence::murat.tpr_reco       ,
				   @sequence::murat.cpr_reco       ,
				   @sequence::murat.mpr_reco       ,
				   @sequence::Stntuple.stnmaker_tcm
				  ]
# new CalPatRec sequence
    path_gen_digi_reco_stn_tcn : [ @sequence::murat.gen_g4_time_map,
				   @sequence::murat.digis          ,
				   @sequence::murat.trk_hits       ,
				   @sequence::murat.cal_hits       ,
				   @sequence::murat.cal_reco       ,
				   @sequence::murat.tpr_reco       ,
				   @sequence::murat.cpr_reco       ,
				   @sequence::murat.mpr_reco       ,
				   @sequence::Stntuple.stnmaker_tcm
				  ]
    
    path_gen_digi_dem_reco_stn : [ @sequence::murat.gen_g4_time_map,
				   @sequence::murat.digis          ,
				   @sequence::murat.trk_hits       ,
				   @sequence::murat.cal_hits       ,
				   @sequence::murat.cal_reco       ,
				   @sequence::murat.dem_reco       ,
				   @sequence::Stntuple.stnmaker_dem
				  ]
    
    path_gen_digi_reco_stn_dem : [ @sequence::murat.gen_g4_time_map,
				   @sequence::murat.digis          ,
				   @sequence::murat.trk_hits       ,
				   @sequence::murat.cal_hits       ,		   
				   @sequence::murat.cal_reco       ,
				   @sequence::murat.dem_reco       ,
				   @sequence::Stntuple.stnmaker_dem
				  ]
    
    path_gen_digi_dmm_reco_stn : [ @sequence::murat.gen_g4_time_map,
				   @sequence::murat.digis          ,
				   @sequence::murat.trk_hits       ,
				   @sequence::murat.cal_hits       ,
				   @sequence::murat.cal_reco       ,
				   @sequence::murat.dmm_reco       ,
				   @sequence::Stntuple.stnmaker_dmm
				  ]

    path_gen_digi_uep_reco_stn : [ @sequence::murat.gen_g4_time_map,
				   @sequence::murat.digis          ,
				   @sequence::murat.trk_hits       ,
				   @sequence::murat.cal_hits       ,
				   @sequence::murat.cal_reco       ,
				   @sequence::murat.uep_reco       ,
				   @sequence::Stntuple.stnmaker
				  ]

    path_gen_digi_ump_reco_stn : [ @sequence::murat.gen_g4_time_map,
				   @sequence::murat.digis          ,
				   @sequence::murat.trk_hits       ,
				   @sequence::murat.cal_hits       ,
				   @sequence::murat.cal_reco       ,
				   @sequence::murat.ump_reco       ,
				   @sequence::Stntuple.stnmaker
				  ]

    path_gen_digi_dem_dmm_reco_stn : [ @sequence::murat.gen_g4_time_map,
				       @sequence::murat.digis          ,
				       @sequence::murat.trk_hits       ,
				       @sequence::murat.cal_hits       ,
				       @sequence::murat.cal_reco       ,
				       @sequence::murat.dem_reco       ,
				       @sequence::murat.dmm_reco       ,
				       @sequence::Stntuple.stnmaker_dem_dmm
				      ]

    path_gen_digi_dem_umm_reco_stn : [ @sequence::murat.gen_g4_time_map,
				       @sequence::murat.digis          ,
				       @sequence::murat.trk_hits       ,
				       @sequence::murat.cal_hits       ,
				       @sequence::murat.cal_reco       ,
				       @sequence::murat.dem_reco       ,
				       @sequence::murat.umm_reco       ,
				       @sequence::Stntuple.stnmaker_dem_umm
				      ]
    
    path_gen_digi_dem_ump_reco_stn : [ @sequence::murat.gen_g4_time_map,
				       @sequence::murat.digis          ,
				       @sequence::murat.trk_hits       ,
				       @sequence::murat.cal_hits       ,
				       @sequence::murat.cal_reco       ,
				       @sequence::murat.dem_reco       ,
				       @sequence::murat.ump_reco       ,
				       @sequence::Stntuple.stnmaker_dem_ump
				      ]

    path_gen_digi_dem_dmp_ump_reco_stn : [ @sequence::murat.gen_g4_time_map,
					   @sequence::murat.digis          ,
					   @sequence::murat.trk_hits       ,
					   @sequence::murat.cal_hits       ,
					   @sequence::murat.cal_reco       ,
					   @sequence::murat.dem_reco       ,
					   @sequence::murat.dmp_reco       ,
					   @sequence::murat.ump_reco       ,
					   @sequence::Stntuple.stnmaker
					  ]

    path_gen_digi_dem_dmm_umm_reco_stn : [ @sequence::murat.gen_g4_time_map,
					   @sequence::murat.digis          ,
					   @sequence::murat.trk_hits       ,
					   @sequence::murat.cal_hits       ,
					   @sequence::murat.cal_reco       ,
					   @sequence::murat.dem_reco       ,
					   @sequence::murat.dmm_reco       ,
					   @sequence::murat.umm_reco       ,
					   @sequence::Stntuple.stnmaker
					  ]
}
