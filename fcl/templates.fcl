# -*- mode:tcl -*-
#------------------------------------------------------------------------------
# services section
#------------------------------------------------------------------------------
services : {
    message               : @local::default_message
    TFileService          : { fileName : "murat_fcl_templates_fcl.hist" }
    RandomNumberGenerator : { }
    #   Timing                : { }
#------------------------------------------------------------------------------
# 2017-04-03: JobConfig/cd3/geom_baseline.txt is the same as Mu2eG4/test/geom_01.txt
#             both just include Mu2eG4/geom/geom_common.txt
#------------------------------------------------------------------------------
    GeometryService        : { inputFile      : "JobConfig/cd3/geom_baseline.txt"      }
    ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"        }
    GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt"   }
    BTrkHelper             : @local::BTrkHelperDefault
    G4Helper               : { }
    SeedService            : { @table::automaticSeeds
	baseSeed         :  0
	maxUniqueEngines :  20
    }

    TimeTracker : {
	printSummary : true
	dbOutput : {
	    filename  : ""
	    overwrite : false
	}
    }
}
#------------------------------------------------------------------------------
# looks that services.scheduler doesn't exist by default
#
# fileMode:MERGE prevents jobs from growing their footprint in memory linearly with time
# 2016-10-14: this command is no longer supported (needed ?)
#------------------------------------------------------------------------------
services.scheduler.wantSummary: true

#------------------------------------------------------------------------------
# at this point I start redefining @table::murat
#------------------------------------------------------------------------------
murat : { @table::murat 

    producers : { @table::murat.producers

	generate: { @table::StoppedMuonConversionGun }
	g4run   : { @table::Mu2eG4.producers.g4run   }
	@table::EventMixing.producers
    }
}

murat : { @table::murat 
    producers: { 
	@table::murat.producers

  	egun : { @table::StoppedParticleReactionGun # p(e)=105 MeV/c
	    physics : {
		pdgId            :  11
		elow             : 104.97175
		ehi              : 104.97176
		spectrumVariable : "momentum"
		spectrumShape    : "flat"
	    }
	}

  	egun95105 : { @table::StoppedParticleReactionGun # p(e)=105 MeV/c
	    physics : {
		pdgId            :  11
		elow             :  95
		ehi              : 105
		spectrumVariable : "momentum"
		spectrumShape    : "flat"
	    }
	}

  	cePhotos : { @table::StoppedParticleReactionGun # CE + rad corr
	    physics : {
		pdgId            :  11
		elow             :   0
		ehi              : 105
		spectrumVariable : "totalEnergy"
		spectrumShape    : "tabulated"
		spectrumFileName : "murat/data/ce_photos.tbl"
	    }
	}

  	mgun : { @table::StoppedParticleReactionGun # p(mu)=105 MeV/c
	    physics : {
		pdgId            :  13
		elow             : 104.97175
		ehi              : 104.97176
		spectrumVariable : "momentum"
		spectrumShape    : "flat"
	    }
	}

  	dioallo : { @table::StoppedParticleReactionGun # DIO LO 
	    physics : {
		pdgId            :  11
		elow             : 105.0010
		ehi              : 105.0015
		spectrumVariable : "totalEnergy"
		spectrumShape    : "tabulated"
		spectrumFileName : "ConditionsService/data/czarnecki_Al.tbl"
	    }
	}

  	dioalll : { @table::StoppedParticleReactionGun # DIO LO 
	    physics : {
		pdgId            :  11
		elow             : 105.0010
		ehi              : 105.0015
		spectrumVariable : "totalEnergy"
		spectrumShape    : "tabulated"
		spectrumFileName : "murat/data/czarnecki_szafron_Al_LL.tbl"
	    }
	}

  	pgun : { @table::StoppedParticleReactionGun # p(proton)=100 MeV/c
	    physics : {
		pdgId            : 2212
		elow             :  99.99
		ehi              : 100.01
		spectrumVariable : "momentum"
		spectrumShape    : "flat"
	    }
	}
#------------------------------------------------------------------------------
# TrkPatRec and CalPatRec modules
#------------------------------------------------------------------------------
	@table::Tracking.producers      # defined in TrkPatRec
	@table::CaloDigiMC.producers    # defined in CaloDigiMC
	@table::CaloDigiMC.producersMC  # defined in CaloDigiMC
	@table::CaloReco.producers      # defined in CaloReco
	@table::CaloCluster.producers   # defined in CaloCluster
	@table::CaloCluster.producersMC # defined in CaloCluster
	@table::CalPatRec.producers
	@table::TrackCaloMatching.producers
	@table::ParticleID.producers
    }
#------------------------------------------------------------------------------
# event mixing modules - all clones of the same module.
# each clone takes certain collections from the input file and adds them to the event
#------------------------------------------------------------------------------
    filters: { 
	@table::murat.filters
 	@table::EventMixing.filters
#------------------------------------------------------------------------------
# Andrej's filter
# Reject events with no hits from signal-like tracks in the detectors.  
# The filter does not look at the background hits from mixed events.
#------------------------------------------------------------------------------
	detectorFilter : { @table::FilterStepPointMomentum }
#------------------------------------------------------------------------------
# Stntuple modules
#------------------------------------------------------------------------------
	@table::Stntuple.filters
	@table::CalPatRec.filters
    }

    outputs: {
	detectorOutput : {
	    module_type   : RootOutput
	    SelectEvents  : [] 
	    outputCommands: [ "keep *_*_*_*"]
	}
    }
}
#------------------------------------------------------------------------------
# redefine location of the mixer's background files
#------------------------------------------------------------------------------
flashMixer.fileNames    : @local::bgHitFiles
ootMixer.fileNames      : @local::bgHitFiles
dioMixer.fileNames      : @local::bgHitFiles
neutronMixer.fileNames  : @local::bgHitFiles
photonMixer.fileNames   : @local::bgHitFiles
protonMixer.fileNames   : @local::bgHitFiles
deuteronMixer.fileNames : @local::bgHitFiles
#------------------------------------------------------------------------------
# sequences: can't define recursively within one namespace
#------------------------------------------------------------------------------
murat.gen_g4              : [ generate, g4run, detectorFilter]
murat.gen_g4_time_map     : [ @sequence::murat.gen_g4, @sequence::EventMixing.TimeMaps ]
murat.CD3Mixers           : [ @sequence::EventMixing.CD3Mixers ]
murat.mix_time_map        : [ @sequence::murat.CD3Mixers, @sequence::EventMixing.TimeMaps ]
murat.gen_g4_mix_time_map : [ @sequence::murat.gen_g4, @sequence::EventMixing.CD3Mixers, @sequence::EventMixing.TimeMaps ]

murat.digis               : [ @sequence::CaloDigiMC.DigiSim, @sequence::Tracking.DigiSim ]

#------------------------------------------------------------------------------
# calorimeter reconstruction
#------------------------------------------------------------------------------
murat.cal_hits : [ @sequence::CaloReco.Reco, @sequence::CaloDigiMC.TruthMatch ]

murat.cal_reco : [ @sequence::murat.cal_hits, 
		   @sequence::CaloCluster.Reco       , 
		   @sequence::CaloCluster.TruthMatch ]
#------------------------------------------------------------------------------
# downstream track reconstruction
#------------------------------------------------------------------------------
murat.tpr_hits : [ @sequence::Tracking.PrepareHits ]

murat.cpr_reco : [ @sequence::CalPatRec.reco, 
		   MergePatRecCpr, 
		   @sequence::TrackCaloMatching.matching_cpr ]

# to use this sequence need to redefine CalTrkFit->CalPatRec in MergePatRecCpr inputs
# murat.cpr_reco_old : [ @sequence::CalPatRec.old_reco, 
#		       MergePatRecCpr,
#		       @sequence::TrackCaloMatching.matching_cpr ]

murat.tpr_reco : [ @sequence::Tracking.TPRDeM , 
		   MergePatRecTpr, 
		   @sequence::TrackCaloMatching.matching_tpr ]

murat.mpr_reco : [ @sequence::Tracking.TPRDeM , 
		   @sequence::CalPatRec.reco, 
		   MergePatRec, 
		   @sequence::TrackCaloMatching.matching ]

# to use this sequence need to redefine CalTrkFit->CalPatRec in MergePatRec inputs
# murat.mpr_reco_old : [ @sequence::Tracking.TPRDeM , 
#		       @sequence::CalPatRec.old_reco, 
#		       MergePatRec, 
#		       @sequence::TrackCaloMatching.matching ]

murat.dem_reco : [ @sequence::Tracking.TPRDeM  , 
		   @sequence::CalPatRec.dem_reco, 
		   MergePatRecDem, 
		   @sequence::TrackCaloMatching.matching_dem, AvikPIDNewDem ]

murat.dmm_reco : [ @sequence::Tracking.TPRDmuM , 
		   @sequence::CalPatRec.dmm_reco, 
		   MergePatRecDmm, 
		   @sequence::TrackCaloMatching.matching_dmm, AvikPIDNewDmm ]

murat.dep_reco : [ @sequence::Tracking.TPRDeP   , 
		   @sequence::CalPatRec.dep_reco, 
		   MergePatRecDep, 
		   @sequence::TrackCaloMatching.matching_dep, AvikPIDNewDep ]

murat.dmp_reco : [ @sequence::Tracking.TPRDmuP  , 
		   @sequence::CalPatRec.dmp_reco, 
		   MergePatRecDmp, 
		   @sequence::TrackCaloMatching.matching_dmp, AvikPIDNewDmp ]
#----------------------------------------------------------------------------------------------------
# so far, CalPatRec is not used for upstream reconstruction
#----------------------------------------------------------------------------------------------------
murat.uem_reco : [ @sequence::Tracking.TPRUeM  , MergePatRecUem, @sequence::TrackCaloMatching.matching_uem, AvikPIDNewUem ]
murat.umm_reco : [ @sequence::Tracking.TPRUmuM , MergePatRecUmm, @sequence::TrackCaloMatching.matching_umm, AvikPIDNewUmm ]
murat.uep_reco : [ @sequence::Tracking.TPRUeP  , MergePatRecUep, @sequence::TrackCaloMatching.matching_uep, AvikPIDNewUep ]
murat.ump_reco : [ @sequence::Tracking.TPRUmuP , MergePatRecUmp, @sequence::TrackCaloMatching.matching_ump, AvikPIDNewUmp ]

murat.paths : {

    path_gen_digi              : [ @sequence::murat.gen_g4_time_map,
				   @sequence::murat.digis
				  ]
    
    path_reco_stn_tcm          : [ @sequence::murat.cal_reco       ,
				   @sequence::murat.tpr_reco       ,
				   @sequence::murat.cpr_reco       ,
				   @sequence::murat.mpr_reco       ,
				   @sequence::Stntuple.stnmaker_tcm
				  ]
    
#    path_reco_calpatrec_new    : [ @sequence::murat.cal_reco       ,
#				   @sequence::murat.cpr_reco   
#				  ]
    
    path_gen_digi_reco_stn_tcm : [ @sequence::murat.gen_g4_time_map,
				   @sequence::murat.digis          ,
				   @sequence::murat.cal_reco       ,
				   @sequence::murat.tpr_reco       ,
				   @sequence::murat.cpr_reco       ,
				   @sequence::murat.mpr_reco       ,
				   @sequence::Stntuple.stnmaker_tcm
				  ]
# new CalPatRec sequence
    path_gen_digi_reco_stn_tcn : [ @sequence::murat.gen_g4_time_map,
				   @sequence::murat.digis          ,
				   @sequence::murat.cal_reco       ,
				   @sequence::murat.tpr_reco       ,
				   @sequence::murat.cpr_reco       ,
				   @sequence::murat.mpr_reco       ,
				   @sequence::Stntuple.stnmaker_tcm
				  ]
    
    path_gen_digi_dem_reco_stn : [ @sequence::murat.gen_g4_time_map,
				   @sequence::murat.digis          ,
				   @sequence::murat.cal_reco       ,
				   @sequence::murat.dem_reco       ,
				   @sequence::Stntuple.stnmaker_dem
				  ]
    
    path_gen_digi_reco_stn_dem : [ @sequence::murat.gen_g4_time_map,
				   @sequence::murat.digis          ,
				   @sequence::murat.cal_reco       ,
				   @sequence::murat.dem_reco       ,
				   @sequence::Stntuple.stnmaker_dem
				  ]
    
    path_gen_digi_dmm_reco_stn : [ @sequence::murat.gen_g4_time_map,
				   @sequence::murat.digis          ,
				   @sequence::murat.cal_reco       ,
				   @sequence::murat.dmm_reco       ,
				   @sequence::Stntuple.stnmaker_dmm
				  ]

    path_gen_digi_uep_reco_stn : [ @sequence::murat.gen_g4_time_map,
				   @sequence::murat.digis          ,
				   @sequence::murat.cal_reco       ,
				   @sequence::murat.uep_reco       ,
				   @sequence::Stntuple.stnmaker
				  ]

    path_gen_digi_ump_reco_stn : [ @sequence::murat.gen_g4_time_map,
				   @sequence::murat.digis          ,
				   @sequence::murat.cal_reco       ,
				   @sequence::murat.ump_reco       ,
				   @sequence::Stntuple.stnmaker
				  ]

    path_gen_digi_dem_dmm_reco_stn : [ @sequence::murat.gen_g4_time_map,
				       @sequence::murat.digis          ,
				       @sequence::murat.cal_reco       ,
				       @sequence::murat.dem_reco       ,
				       @sequence::murat.dmm_reco       ,
				       @sequence::Stntuple.stnmaker_dem_dmm
				      ]

    path_gen_digi_dem_umm_reco_stn : [ @sequence::murat.gen_g4_time_map,
				       @sequence::murat.digis          ,
				       @sequence::murat.cal_reco       ,
				       @sequence::murat.dem_reco       ,
				       @sequence::murat.umm_reco       ,
				       @sequence::Stntuple.stnmaker_dem_umm
				      ]
    
    path_gen_digi_dem_ump_reco_stn : [ @sequence::murat.gen_g4_time_map,
				       @sequence::murat.digis          ,
				       @sequence::murat.cal_reco       ,
				       @sequence::murat.dem_reco       ,
				       @sequence::murat.ump_reco       ,
				       @sequence::Stntuple.stnmaker_dem_ump
				      ]

    path_gen_digi_dem_dmp_ump_reco_stn : [ @sequence::murat.gen_g4_time_map,
					   @sequence::murat.digis          ,
					   @sequence::murat.cal_reco       ,
					   @sequence::murat.dem_reco       ,
					   @sequence::murat.dmp_reco       ,
					   @sequence::murat.ump_reco       ,
					   @sequence::Stntuple.stnmaker
					  ]

    path_gen_digi_dem_dmm_umm_reco_stn : [ @sequence::murat.gen_g4_time_map,
					   @sequence::murat.digis          ,
					   @sequence::murat.cal_reco       ,
					   @sequence::murat.dem_reco       ,
					   @sequence::murat.dmm_reco       ,
					   @sequence::murat.umm_reco       ,
					   @sequence::Stntuple.stnmaker
					  ]
#------------------------------------------------------------------------------
#
#------------------------------------------------------------------------------
    path_gen_mix_digi_reco_stn_tcm : [ @sequence::murat.gen_g4         ,
				       @sequence::EventMixing.CD3Mixers,
				       @sequence::EventMixing.TimeMaps ,
				       @sequence::murat.digis          ,
				       @sequence::murat.cal_reco       , 
				       @sequence::murat.tpr_reco       ,
				       @sequence::murat.cpr_reco       ,
				       @sequence::murat.mpr_reco       ,
				       @sequence::Stntuple.stnmaker_tcm
				      ]

    path_mix_hits_calo_apr_vpid_stnm : [ @sequence::murat.mix_time_map   , 
					 @sequence::murat.digis          ,
					 @sequence::murat.cal_reco       , 
					 @sequence::murat.tpr_reco       ,
					 @sequence::murat.cpr_reco       ,
					 @sequence::murat.mpr_reco       ,
					 @sequence::Stntuple.stnmaker_tcm
					]


#------------------------------------------------------------------------------
# run all 8 reconstruction passes
#------------------------------------------------------------------------------
    path_gen_digi_all_reco_ump : [ @sequence::murat.gen_g4_time_map,
				   @sequence::murat.digis          ,
				   @sequence::murat.cal_reco       ,
				   @sequence::murat.dem_reco       ,
				   @sequence::murat.dmm_reco       ,
				   @sequence::murat.dep_reco       ,
				   @sequence::murat.dmp_reco       ,
				   @sequence::murat.uem_reco       ,
				   @sequence::murat.umm_reco       ,
				   @sequence::murat.uep_reco       ,
				   @sequence::murat.ump_reco       ,
				   @sequence::Stntuple.stnmaker_all
				  ]
}
