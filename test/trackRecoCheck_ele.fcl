# -*- mode: tcl -*-
#------------------------------------------------------------------------------
# generate 105 MeV/c electrons, 
#------------------------------------------------------------------------------
#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"

#include "Stntuple/fcl/prolog.fcl"
#include "murat/fcl/prolog.fcl"

BEGIN_PROLOG
  pdgCode    : 11
  elow       : 105.0012
  ehi        : 105.0014
  bgHitFiles : @nil
END_PROLOG

#include "Stntuple/fcl/templates.fcl"
#------------------------------------------------------------------------------
#                                       Give this process a name
process_name : TrackRecoCheck
#                                       generate events
source : { module_type : EmptyEvent }
#------------------------------------------------------------------------------
# physics
#------------------------------------------------------------------------------
physics : { @table::physics 
    producers : { @table::physics.producers 
	generate             : { @table::StoppedParticleReactionGun
#------------------------------------------------------------------------------
# for 105 MeV/c electron : E = 105.00130           MeV
# for muon: sqrt(105.*105+105.658*105.658) = 148.9584269653785
#------------------------------------------------------------------------------
	    physics          : {
		pdgId            : @local::pdgCode
		elow             : @local::elow
		ehi              : @local::ehi
		spectrumVariable : "totalEnergy"
		spectrumShape    : "flat"
	    }
	}
    }

    filters : {  @table::physics.filters
	TrackRecoCheck           : { @table::TrackRecoCheck 
	    debugBits            : { bit1:1 bit11:1 }
	}
    }
#------------------------------------------------------------------------------
# paths: make only track hits
# the procedure should not rely on MC, so need to run the track reconstruction 
# to determine track paths in the straws
# as CalPatRec involves the calorimeter reconstruction, run TrkPatRec only
#------------------------------------------------------------------------------
    p1 : [ @sequence::generatorSeq, makeSD, makeSH , @sequence::trkPatRecSeq 
#	  , MuHitDisplay
	  , TrackRecoCheck	  
	 ]

    e1 : []

    trigger_paths  : [p1]
    end_paths      : [e1]
}

source.firstRun                          :  1 
services.TFileService.fileName           : "trackRecoCheck_ele.hist"
#------------------------------------------------------------------------------
# everything below is appended by murat/scripts/submit_mu2e_job
#------------------------------------------------------------------------------
