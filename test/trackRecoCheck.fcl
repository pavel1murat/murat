# -*- mode: tcl -*-
#------------------------------------------------------------------------------
# generate electrons
#-----------------------------------------------------------------------------
#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"

#include "Stntuple/fcl/prolog.fcl"
#include "murat/fcl/prolog.fcl"

//test: // This must be commented out for grid production.
BEGIN_PROLOG
#  muStops    : [ "/mu2e/data/tdr/beam/g4s3p5/mergedMuonStops/mustops.1025a_1426a_1504a.15318715.root" ]
#  muStops    : [ "mergedMuonStops/mustops.1025a_1426a_1504a.15318715.root" ]
#  bgHitFiles : [ "/mu2e/data/tdr/beam/mixp3/tdr.beam.mix.bg.1516a.15409268/good/00000/data_mixBG.root"]
#  bgHitFiles : [ "/mu2e/data/tdr/beam/mixp3-test/tdr.beam.mix.bgonly-test.1516a.15405463/good/00000/data_mixBG.root"]

  bgHitFiles : @nil
  pdgCode    : 11
  elow       : 105.0012
  ehi        : 105.0014
END_PROLOG
#                                       Give this process a name
process_name : TrackRecoCheck

# Read events from a file (made by example 3)
source : {
    module_type : EmptyEvent
#    module_type : RootInput
    maxEvents   : -1
}
#------------------------------------------------------------------------------
# services
#------------------------------------------------------------------------------
services : {
    # Adjust configuration of message logger:
    # Load the standard message logger configuration:
    # Threshold=Info (from using mf_interactive). 
    # Limit of 5 per category; then exponential backoff.
    #  message.destinations.log.default.limit : 5

#    message : @local::mf_debugging
    message : @local::mf_interactive

    TFileService : { fileName   : "trackRecoCheck.hist" }
    RandomNumberGenerator : { }

    user : {
	
	GeometryService        : { inputFile      : "Mu2eG4/test/geom_01.txt" }

	ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt" }
	GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
	G4Helper : { }
	
	SeedService : @local::automaticSeeds
    }
}
#------------------------------------------------------------------------------
# physics
#------------------------------------------------------------------------------
physics : {
    producers : {
	generate             : {
#------------------------------------------------------------------------------
# for 105 MeV/c electron : E = 105.00130           MeV
# for muon: sqrt(105.*105+105.658*105.658) = 148.9584269653785
# by default, StoppedParticleReactionGun has 'mean' set to +1, 
# which means the Poisson mean of 1 !!! 
#------------------------------------------------------------------------------
	    module_type      : StoppedParticleReactionGun
	    physics          : {
		pdgId            : @local::pdgCode
		elow             : @local::elow
		ehi              : @local::ehi
		spectrumVariable : "totalEnergy"
		spectrumShape    : "flat"
	    }
	    muonStops            : {
#------------------------------------------------------------------------------
# use --fclinput=@muStops:datasets/mustops for grid submission 
# [ "mergedMuonStops/mustops.1025a_1426a_1504a.15318715.root" ] 
#------------------------------------------------------------------------------
		inputFiles            : @local::muStops
		averageNumRecordsToUse: 500000
		treeName              : "stoppedMuonDumper/stops"
		branchName            : "stops"
		verbosityLevel        : 1
	    }
	}
	
	g4run                : @local::g4run
        protonTimeMap        : { module_type : GenerateProtonTimes }
        muonTimeMap          : { module_type : GenerateMuonLife }
#------------------------------------------------------------------------------
# TrkPatRec modules
#------------------------------------------------------------------------------
	makeSD               : @local::makeSD
	makeSH               : @local::makeSHfromSD
	FSHPreStereo         : @local::FSHPreStereo
	MakeStereoHits       : @local::MakeStereoHits
	FlagStrawHits        : @local::FlagStrawHits
	FlagBkgHits          : @local::FlagBkgHits
	TrkPatRec            : @local::TrkPatRecDownstreameMinus

	CaloReadoutHitsMaker : @local::CaloReadoutHitsMaker
	CaloCrystalHitsMaker : @local::CaloCrystalHitsMaker
	MakeCaloCluster      : @local::MakeCaloCluster

	TrkExtrapol          : @local::TrkExtrapol
	CaloMatching         : @local::TrackCaloMatching

	ParticleID           : @local::ParticleID     # needed by the event display
    }

    filters : {  
	TrackRecoCheck       : @local::TrackRecoCheck
	MuHitDisplay         : @local::MuHitDisplay
    }

    analyzers: {}
#------------------------------------------------------------------------------
# paths
#------------------------------------------------------------------------------
    p1 : [
	  generate, g4run
	  , protonTimeMap, muonTimeMap
	  , makeSD, makeSH 
	  , FSHPreStereo, MakeStereoHits, FlagStrawHits, FlagBkgHits, TrkPatRec
	  , TrackRecoCheck	  
	 ]

    e1 : []

    trigger_paths  : [p1]
    end_paths      : [e1]
}

services.scheduler.wantSummary: true
#------------------------------------------------------------------------------
# print per event timing for ::event entry points
#------------------------------------------------------------------------------
#     services.Timing: { }
#------------------------------------------------------------------------------
# print timing summary
#------------------------------------------------------------------------------
services.scheduler.wantSummary: true
source.firstRun                            :  1 

services.user.SeedService.baseSeed         :  0
services.user.SeedService.maxUniqueEngines :  20

# physics.producers.generate.inputfile  : "Mu2eG4/test/genconfig_DownstreameMinus.txt"
physics.producers.makeSD.TimeOffsets               : { inputs : [ "protonTimeMap", "muonTimeMap" ] }
physics.producers.CaloReadoutHitsMaker.TimeOffsets : { inputs : [ "protonTimeMap", "muonTimeMap" ] }

physics.filters.TrackRecoCheck.debugBits : {bit1:1 bit11:1}
