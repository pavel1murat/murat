//
// config file to perform Geant4 calorimetric studies using the Mu2e framework infrastructure
// to be included in g4studyGeom.txt

// $Id: g4studyGeomCalo_01.txt,v 1.3 2013/04/12 20:13:12 genser Exp $
// $Author: genser $
// $Date: 2013/04/12 20:13:12 $
//
// Original author K. Genser
//

// Units are mm, MeV

#include "Mu2eG4/test/g4studyGeom.txt"

// Change the name.
string detector.name           = "GaAsPbSandwich";

// event track step debug list
// vector<int> g4.trackingActionEventList = {1,2,3,4,5};
vector<int> g4.trackingActionEventList = {};
// vector<int> g4.steppingActionEventList = {1,2,3,4,5};
vector<int> g4.steppingActionEventList = {};
bool        g4.printTrackTiming = true;

// overlaps check
bool g4.doSurfaceCheck         = true;

// version of the target geometry configuration

int            mu2e.studyEnvVersion   = 3;

// the "World Box"

// verbosity flag pertaining to the world construction
int world.verbosityLevel         = 2;

// a very "thin" vacuum
string world.materialName        = "G4_Galactic";

// make the world boundaries invisible
bool   world.boxVisible          = false;
// make the volume transparent
bool   world.boxSolid            = false;

double world.halfLength          = 2000.0;
double world.outerLayerThickness = 0.001;// the world "outer layer" to force a step point

// copyNumber for volume tracking purposes
// 0 & 1 are World and an auxiliary 
// volume almost filling up the world

// calorimeter type target with the dimensions and materials specified by vectors of data

// verbosity 
int    calo.verbosityLevel         = 1;

bool   calo.visible = true;
bool   calo.solid   = true;

vector<double> calo.transverseHalfLengths   = {2.,2.}; // mm
vector<double> calo.transverseCenterInWorld = {0., 0.};

// the copy numbers will increase by one starting from then numbers below (0 & 1 are taken...)

int            calo.activeVolumeStartingCopyNumber  = 100;
int            calo.passiveVolumeStartingCopyNumber = 500;

// we make the world big enough to start the first surface at z=0.0

double         calo.moduleStartingLongitPosition   = 6.0;
int            calo.moduleNumberOfLayers           = 400;
vector<double> calo.moduleLayerHalfLengths         = {0.0001  , 0.0499  }; // mm, 15 um lead and 35 um GaAs
vector<string> calo.moduleLayerMaterials           = {"InGaAs", "InGaAs"};

//
// This tells emacs to view this file in c++ mode.
// Local Variables:
// mode:c++
// End:
