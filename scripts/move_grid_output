#!/bin/bash
# call   : move_grid_output  mdc2018_stntuple 721_0001 flatmugamma-calo read_reco_stn jobid dsname doit
# ------
#
#  assume that the output directory is /mu2e/data/users/$USER/datasets/$dsid
#
# working example: 
# . murat/scripts/move_grid_output 15158701 /mu2e/data/users/$USER/datasets e0000002 .  
# file extentions recognized: .art .log .hist .stn
#------------------------------------------------------------------------------
   project=$1
   version=$2
      dsid=$3
       job=$4
     jobid=$5 # 15160119
    dsname=$6
      doit=$7

output_dir=/mu2e/data/users/$USER/datasets

job_name_stub=$project.$version.$dsid.$job

 stage_dir=/pnfs/mu2e/scratch/users/$USER/workflow/$job_name_stub/outstage/$jobid

echo stage_dir=$stage_dir
echo     jobid=$jobid
echo    dsname=$dsname

cmd_prefix="echo" ; if [ ".$doit" != "." ] ; then cmd_prefix="" ; fi
#------------------------------------------------------------------------------
# find the GRID output directory corresponding to job ID
#------------------------------------------------------------------------------
# job=`ls $stage_dir | grep $jobid`;
# jobname=`echo $job | awk -F . '{print $1}'`

# if [ $3 != "." ] ; then output_dir=$3 ; fi
od=$output_dir/$dsname

echo job=$job jobname=$jobname od=$od
#------------------------------------------------------------------------------
# create output directories, if they didn't exist
#------------------------------------------------------------------------------
if [ ! -d $od      ] ; then mkdir $od      ; fi
if [ ! -d $od/log  ] ; then mkdir $od/log  ; fi
if [ ! -d $od/fcl  ] ; then mkdir $od/fcl  ; fi
if [ ! -d $od/hist ] ; then mkdir $od/hist ; fi

dir=$stage_dir
echo dir=$dir
for sd1 in `ls $dir` ; do
#------------------------------------------------------------------------------
# now there is an intermediate subdirectory level
#------------------------------------------------------------------------------
    list_of_subdirs=`ls $dir/$sd1`

    for sd2 in $list_of_subdirs ; do
#------------------------------------------------------------------------------
# check if the job finished with RC=0
# skip directories corresponding to non-completed sections like '00015.wuue'
# skip segments with RC != 0
#------------------------------------------------------------------------------
#       echo $subdir
	sd=$dir/$sd1/$sd2

	nf=`echo $sd2 | awk -F . '{print NF}'` 
	if [ $nf == 1 ] ; then
#------------------------------------------------------------------------------
# completed section, assume there is only one .log and only one .fcl file
#------------------------------------------------------------------------------
	    logfile=`ls $sd/log.*.log`
	    fclfile=`ls $sd/*.fcl`

	    rs_stub=`echo $logfile | awk -F. '{print $(NF-1)}'`
#	    echo rs_stub:$rs_stub

	    index0=`echo $sd2 | awk '{printf "%04i", $1}'`
	    index=$sd1.`echo $sd2 | awk '{printf "%04i", $1}'`
	    echo ------------------------ sd=$sd section=$index: 
	    
	    x=`cat $logfile | grep "mu2egrid exit status"`; 
	    rc=`echo $x | awk '{print $4}'`

	    rc=0

	    if [ ".$rc" == ".0" ] ; then
#		echo [move_grid_output:$LINENO]: dsname=$dsname
		new_stn_fn=$dsname.000001$index0
		if [ ${dsname:3:1} != "s" ] ; then 
#------------------------------------------------------------------------------
# PRODUCTION dataset: move stntuple and histogram files
#------------------------------------------------------------------------------
		    stn_files=`ls $sd/* | grep "\.stn"`
		    for f in $stn_files ; do
			$cmd_prefix cp $f  $od/$dsname.$rs_stub # 000001$index0
		    done

		    hist_files=`ls $sd/*.root | grep -v stntuple`
		    for f in $hist_files ; do
			$cmd_prefix cp $f  $od/hist/`basename $f`
		    done
		else 
#------------------------------------------------------------------------------
# SNTUPLE dataset: move stntuple files
# STNTUPLE dataset may also have DST files woth the extention .art produced 
# at this point, assume one .stn file per job
#------------------------------------------------------------------------------
		    stn_files=`ls $sd/* | grep "\.stn"`
		    new_stn_fn=$dsname.$rs_stub ;   # 000001$index0
		    for f in $stn_files ; do
			$cmd_prefix cp $f  $od/$new_stn_fn
		    done

		    dst_files=`ls $sd/* | grep "\.art"`
		    dst_dsname=${dsname:0:3}"a"${dsname:4}
		    
		    odd=$output_dir/$dst_dsname
		    if [ ! -d $odd ] ; then mkdir -p $odd ; fi
		    
		    for f in $dst_files ; do
			$cmd_prefix cp $f $odd/$dst_dsname.$rs_stub ; # 000001$index0
		    done
#------------------------------------------------------------------------------
# move histogram files
#------------------------------------------------------------------------------
		    hist_files=`ls $sd/* | grep "\.root" | grep -v stntuple`
		    for f in $hist_files ; do
			$cmd_prefix cp $f  $od/hist/`basename $f`
		    done
		fi
#------------------------------------------------------------------------------
# move log files
#------------------------------------------------------------------------------
		$cmd_prefix cp $logfile    $od/log/$new_stn_fn.log
		$cmd_prefix cp $fclfile    $od/fcl/$new_stn_fn.fcl
	    else
		if [ ".$rc" == "." ] ; then
		    x=`cat $logfile | grep "Art has completed"`;
		    rc=`echo $x | awk '{print $9}'`
		fi
		echo .... ERROR: job finished with RC=$rc, do not move its output
	    fi
	else
	    printf " %10s : GRID ERROR, job not completed, IGNORE ITS OUTPUT\n" $subdir
	fi
    done
done
# 
#------------------------------------------------------------------------------
# concatenation of the output data files
# 2014-02-06: no more concatenation 
#------------------------------------------------------------------------------
#concat_list=$jobname.$jobid.concat_list

#for subdir in `ls $dir` ; do
#  echo $subdir
#  sd=$dir/$subdir
#  ls $sd/$jobname.root
#done >| $concat_list

#------------------------------------------------------------------------------
# concatenation, make sure we are not overwriting the data file
#------------------------------------------------------------------------------
#output_file=out/${jobname}.root
#
#if [ -f $output_file ] ; then
#    dd=`stat -c %y $output_file | awk '{print $1}'`
#    $cmd_prefix mv $output_file $output_file.$dd
#fi
#
#if [ ".$doit" == "." ] ; then 
#    $cmd_prefix mu2e -c murat/test/concatenation.fcl \
#	-S $concat_list -o $output_file  \>\| $od/${jobname}_concatenation.log 2\>\&1 \&
#else
#    $cmd_prefix mu2e -c murat/test/concatenation.fcl \
#	-S $concat_list -o $output_file  >| $od/${jobname}_concatenation.log 2>&1 &
#fi
#------------------------------------------------------------------------------
# don't concatenate histogram files
#------------------------------------------------------------------------------
# hist_file_list=`ls $dir/*/*.hist`

# echo hist_file_list=$hist_file_list
# echo aaaa

# if [ ".$doit" == "." ] ; then 
#   $cmd_prefix hadd -f ./out/$jobname.hist $hist_file_list \>\| $od/${jobname}_hadd.log 2\>\&1
# else
#  $cmd_prefix hadd -f ./out/$jobname.hist $hist_file_list >| $od/${jobname}_hadd.log 2>&1 
#fi
