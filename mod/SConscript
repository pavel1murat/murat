#!/usr/bin/env python
#
# Script to build the files found in this directory.
#------------------------------------------------------------------------------
import os
Import('env')
Import('murat_helper')
#------------------------------------------------------------------------------
# 2016-10-10: STNTUPLE link: add ROOT 'EG' library after 'Physics' library
#------------------------------------------------------------------------------
babarlibs = env['BABARLIBS']
rootlibs  = env['ROOTLIBS']

if ( not ("EG" in rootlibs)):
    rootlibs.insert(rootlibs.index("Physics")+1,"EG");

helper = murat_helper();

helper.handle_dictionaries();

libs      = [ 'murat_alg',
              'murat_obj',
              'Stntuple_val',
              'Stntuple_mod',
              'Stntuple_alg',
              'Stntuple_obj',
              'Stntuple_geom',
              'Stntuple_base',
#
              'mu2e_TrkReco',
              'mu2e_TrkHitReco',
              'mu2e_TrackerConditions',
              'mu2e_Mu2eBTrk',
              'mu2e_GeometryService',
              'mu2e_ConditionsService',
              'mu2e_Mu2eUtilities',
              'mu2e_GeneralUtilities',
              'mu2e_CaloCluster',
              'mu2e_CalorimeterGeom',
              'mu2e_MCDataProducts',
              'mu2e_RecoDataProducts',
              'mu2e_BTrkData',
              'mu2e_DataProducts',
              'mu2e_Mu2eInterfaces',
              babarlibs,
              'CLHEP',
              'art_Framework_Core',
              'art_Framework_Principal',
              'art_Framework_Services_Registry',
              'art_Framework_Services_Optional',
              'art_Framework_Services_Optional_TFileService_service',
              'art_Framework_Services_Optional_RandomNumberGenerator_service',
              'art_Persistency_Common',
              'art_Persistency_Provenance',
              'art_Utilities',
              'MF_MessageLogger',
              rootlibs,
              'fhiclcpp',
              'canvas',
              'cetlib',
              'cetlib_except',
              'xerces-c',
              'boost_filesystem',
              'boost_system',
              ];

list_of_cc_files = Glob('*.cc',strings=True);
list_of_modules  = Glob('*_module.cc', strings=True)
skip_list        = list_of_modules

helper.build_libs(list_of_cc_files,skip_list,libs);
helper.build_modules(list_of_modules,[],libs)

# print "tmpdir:"+env['TMP_LIB_DIR']
